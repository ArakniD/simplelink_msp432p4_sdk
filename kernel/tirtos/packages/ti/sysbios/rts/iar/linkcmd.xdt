%%{
/*
 * Copyright (c) 2013-2018, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
%%}
%var mts =  xdc.module("ti.sysbios.rts.iar.MultithreadSupport");
%if (mts.enableMultithreadSupport == true) {
%    if (Program.build.target.$name.match(/iar\.targets\.arm/)) {
--threaded_lib
--redirect __iar_system_Mtxinit=ti_sysbios_rts_iar_MultithreadSupport_initLock__I
--redirect __iar_system_Mtxdst=ti_sysbios_rts_iar_MultithreadSupport_destroyLock__I
--redirect __iar_system_Mtxlock=ti_sysbios_rts_iar_MultithreadSupport_acquireLock__I
--redirect __iar_system_Mtxunlock=ti_sysbios_rts_iar_MultithreadSupport_releaseLock__I

--redirect __iar_file_Mtxinit=ti_sysbios_rts_iar_MultithreadSupport_initLock__I
--redirect __iar_file_Mtxdst=ti_sysbios_rts_iar_MultithreadSupport_destroyLock__I
--redirect __iar_file_Mtxlock=ti_sysbios_rts_iar_MultithreadSupport_acquireLock__I
--redirect __iar_file_Mtxunlock=ti_sysbios_rts_iar_MultithreadSupport_releaseLock__I

--redirect __iar_Initdynamiclock=ti_sysbios_rts_iar_MultithreadSupport_initLock__I
--redirect __iar_Dstdynamiclock=ti_sysbios_rts_iar_MultithreadSupport_destroyLock__I
--redirect __iar_Lockdynamiclock=ti_sysbios_rts_iar_MultithreadSupport_acquireLock__I
--redirect __iar_Unlockdynamiclock=ti_sysbios_rts_iar_MultithreadSupport_releaseLock__I

--redirect __aeabi_read_tp=ti_sysbios_rts_iar_MultithreadSupport_getTlsPtr__I
%    }
%}
