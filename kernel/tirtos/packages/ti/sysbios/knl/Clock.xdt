%%{
/*
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
%%}
%/*
% *  ======== Clock.xdt ========
% */
%var BIOS = xdc.module("ti.sysbios.BIOS");
%if (BIOS.clockEnabled == true) {
%var Clock = xdc.module("ti.sysbios.knl.Clock");
%var mobj = '(&ti_sysbios_knl_Clock_Module__state__V)';
Void ti_sysbios_knl_Clock_doTick__I(UArg arg)
{
%if (Clock.tickMode == Clock.TickMode_PERIODIC) {
    /* update system time */
    `mobj`->ticks++;

%}
    ti_sysbios_knl_Clock_logTick__E();

%if (Clock.tickMode == Clock.TickMode_DYNAMIC) {
    {
%}
%else {
    if (!ti_sysbios_knl_Queue_empty(ti_sysbios_knl_Clock_Module_State_clockQ())) {
        `mobj`->swiCount++;

%}
%if (BIOS.swiEnabled == true) {
        ti_sysbios_knl_Swi_post(`mobj`->swi);
%}
%else {
%   if (Clock.tickMode == Clock.TickMode_DYNAMIC) {
        ti_sysbios_knl_Clock_workFuncDynamic__E(0, 0);
%   }
%   else {
        ti_sysbios_knl_Clock_workFunc__E(0, 0);
%   }
%}
    }
}
%} /* BIOS.clockEnabled */
