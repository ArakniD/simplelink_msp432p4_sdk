%%{
/*
 * Copyright (c) 2018 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== WatchdogMSP432E4.Board.c.xdt ========
 */

    let Watchdog    = args[0];
    let instances   = Watchdog.$instances;
    let countDef    = Watchdog.defaultInstanceName + "COUNT";
    let Common      = system.getScript("/ti/drivers/Common.js");
%%}

/*
 *  =============================== Watchdog ===============================
 */

#include <ti/drivers/Watchdog.h>
#include <ti/drivers/watchdog/WatchdogMSP432E4.h>
#include <ti/devices/msp432e4/inc/msp432e401y.h>
#include <ti/devices/msp432e4/driverlib/interrupt.h>

#define `countDef` `instances.length`

WatchdogMSP432E4_Object watchdogMSP432E4Objects[`countDef`];

const WatchdogMSP432E4_HWAttrs
    watchdogMSP432E4HWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
%     let inst     = instances[i];
%     let periodMS = inst.period;
%     let freq     = 120000000;
%     let count    = (freq/1000) * periodMS;
    /* `inst.$name`: period = `inst.period` */
    {
        .baseAddr    = `inst.watchdog.$solution.peripheralName`_BASE,
        .intNum      = INT_WATCHDOG,
        .intPriority = `Common.intPriority2Hex(inst.interruptPriority)`,
        .reloadValue = `count`
    },
% }
};

const Watchdog_Config Watchdog_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
%     let inst = instances[i];
    /* `inst.$name` */
    {
        .fxnTablePtr = &WatchdogMSP432E4_fxnTable,
        .object      = &watchdogMSP432E4Objects[`i`],
        .hwAttrs     = &watchdogMSP432E4HWAttrs[`i`]
    },
% }
};

const uint_least8_t Watchdog_count = `countDef`;
