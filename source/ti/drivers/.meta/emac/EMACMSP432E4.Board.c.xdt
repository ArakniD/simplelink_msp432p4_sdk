%%{
/*
 * Copyright (c) 2018-2019 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== EMACMSP432E4.Board.c.xdt ========
 */

    let EMAC   = args[0];
    let inst   = EMAC.$instances[0];
    let Common = system.getScript("/ti/drivers/Common.js");

    if (EMAC.$instances.length == 0) return;

    let m1, m2, m3, m4, m5, m6;

    m1 = inst.macAddress.substring(0, 2);
    m2 = inst.macAddress.substring(3, 5);
    m3 = inst.macAddress.substring(6, 8);
    m4 = inst.macAddress.substring(9, 11);
    m5 = inst.macAddress.substring(12, 14);
    m6 = inst.macAddress.substring(15, 17);

    let led0Pin = inst.emac.led0Pin.$solution.devicePinName;
    let led1Pin = inst.emac.led1Pin.$solution.devicePinName;
    let led0PinName = 'EMACMSP432E4_' + led0Pin + '_EN0LED0';
    let led1PinName = 'EMACMSP432E4_' + led1Pin + '_EN0LED1';
%%}
/*
 *  =============================== EMAC ===============================
 */

/* minimize scope of ndk/inc/stk_main.h -- this eliminates TIPOSIX path dependencies */

#include <ti/devices/msp432e4/driverlib/interrupt.h>

#define NDK_NOUSERAPIS 1
#include <ti/drivers/emac/EMACMSP432E4.h>

/*
 *  Required by the Networking Stack (NDK). This array must be NULL terminated.
 *  This can be removed if NDK is not used.
 *  Double curly braces are needed to avoid GCC bug #944572
 *  https://bugs.launchpad.net/gcc-linaro/+bug/944572
 */
NIMU_DEVICE_TABLE_ENTRY NIMUDeviceTable[2] = {
    {
        /* Default: use Ethernet driver */
        .init = EMACMSP432E4_NIMUInit
    },
    {NULL}
};

/*
 *  Ethernet MAC address
 *  NOTE: By default (i.e. when each octet is 0xff), the driver reads the MAC
 *        address that's stored in flash.
 */
static uint8_t macAddress[6] = {0x`m1`, 0x`m2`, 0x`m3`, 0x`m4`, 0x`m5`, 0x`m6`};

/* EMAC configuration structure */
const EMACMSP432E4_HWAttrs EMACMSP432E4_hwAttrs = {
    .baseAddr = EMAC0_BASE,
    .intNum = INT_EMAC0,
    .intPriority = `Common.intPriority2Hex(inst.interruptPriority)`,
    .led0Pin = `led0PinName`,
    .led1Pin = `led1PinName`,
    .macAddress = macAddress
};
