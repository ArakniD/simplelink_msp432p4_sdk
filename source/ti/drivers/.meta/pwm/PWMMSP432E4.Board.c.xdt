%%{
/*
 * Copyright (c) 2018-2019, Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== PWMMSP432E4.Board.c.xdt ========
 */

    let PWM = args[0]; /* passed by /ti/drivers/templates/Board.c.xdt */

    /* shorthand names for some common references in template below */
    let instances = PWM.$instances;

    /* Board_XXXCOUNT string, derived from defaultInstanceName */
    let countDef = PWM.defaultInstanceName + "COUNT";

    let pwmMapping = {
        "Down"                       : "PWM_GEN_MODE_DOWN",
        "Up Down"                    : "PWM_GEN_MODE_UP_DOWN",
        "Immediate Updates"          : "PWM_GEN_MODE_NO_SYNC",
        "Local Synchronous Updates"  : "PWM_GEN_MODE_SYNC | PWM_GEN_MODE_GEN_SYNC_LOCAL",
        "Global Synchronous Updates" : "PWM_GEN_MODE_SYNC | PWM_GEN_MODE_GEN_SYNC_GLOBAL",
        "Debug Run"                  : "PWM_GEN_MODE_DBG_RUN",
        "Debug Stop"                 : "PWM_GEN_MODE_DBG_STOP"
    };
%%}
/*
 *  =============================== PWM ===============================
 */

#include <ti/drivers/PWM.h>
#include <ti/drivers/pwm/PWMMSP432E4.h>
#include <ti/devices/msp432e4/driverlib/pwm.h>

#define `countDef` `instances.length`

/*
 *  ======== pwmMSP432E4Objects ========
 */
PWMMSP432E4_Object pwmMSP432E4Objects[`countDef`];

/*
 *  ======== pwmMSP432E4HWAttrs ========
 */
const PWMMSP432E4_HWAttrs pwmMSP432E4HWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let periPin = inst.pwm.pwmPin.$solution.peripheralPinName; // eg, M0PWM0
    % let pwmOutput = periPin.substring(5);  // eg, 0
    % let pin = inst.pwm.pwmPin.$solution.devicePinName; // eg, PF0
    /* `inst.$name` */
    % if (inst.$hardware) {
    %     if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %     }
    % }
    {
        .pwmBaseAddr = PWM0_BASE,
        .pwmOutput   = PWM_OUT_`pwmOutput`,
        .pwmGenOpts  = `pwmMapping[inst.pwmGenerationMode]` |
                       `pwmMapping[inst.debugMode]` |
                       `pwmMapping[inst.synchronizationMode]`,
        .pinConfig   = PWMMSP432E4_`pin`_`periPin`, /* `pin` */
    },
% }
};

/*
 *  ======== PWM_config ========
 */
const PWM_Config PWM_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let name = inst.$name;
    /* `name` */
    % if (inst.$hardware) {
    %     if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %     }
    % }
    {
        .fxnTablePtr = &PWMMSP432E4_fxnTable,
        .object = &pwmMSP432E4Objects[`name`],
        .hwAttrs = &pwmMSP432E4HWAttrs[`name`]
    },
% }
};

const uint_least8_t PWM_count = `countDef`;
