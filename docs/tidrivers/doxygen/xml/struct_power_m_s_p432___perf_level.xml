<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_power_m_s_p432___perf_level" kind="struct" language="C++" prot="public">
    <compoundname>PowerMSP432_PerfLevel</compoundname>
    <includes refid="_power_m_s_p432_8h" local="no">PowerMSP432.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a82d4c23546e9735b7314836e6cdf4717" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::activeState</definition>
        <argsstring></argsstring>
        <name>activeState</name>
        <briefdescription>
<para>The active state for the device. </para>        </briefdescription>
        <detaileddescription>
<para>The states are identified by the enumerations in pcm.h. The supported active states are: PCM_AM_LDO_VCORE0, PM_AM_LDO_VCORE1, PCM_AM_DCDC_VCORE0, PCM_AM_DCDC_VCORE1. Usage of DCDC states requires that the DCDC is available for the device and board configuration.</para><para>Active states refer to any power state in which CPU execution is possible. Two core voltage level settings are supported: VCORE0 and VCORE1. See <ref refid="struct_power_m_s_p432___perf_level_1a6c0084d8e2d45959783590ce98074b3b" kindref="member">PowerMSP432_PerfLevel.VCORE</ref>. Three active states are associated with each core voltage level. The various active states allow for optimal power and performance across a broad range of application requirements. The core voltage can be supplied by either a low dropout (LDO) regulator or a DC/DC (DCDC) regulator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="369" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a6c0084d8e2d45959783590ce98074b3b" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::VCORE</definition>
        <argsstring></argsstring>
        <name>VCORE</name>
        <briefdescription>
<para>The core voltage level. </para>        </briefdescription>
        <detaileddescription>
<para>The supported levels are &apos;0&apos; indicating VCORE0, and &apos;1&apos; indicating VCORE1.</para><para>The Power Supply System (PSS) uses an integrated voltage regulator to produce a secondary core voltage (VCORE) from the primary voltage that is applied to the device (VCC). In general, VCORE supplies the CPU, memories, and the digital modules, while VCC supplies the I/Os and analog modules. The VCORE output is maintained using a dedicated voltage reference. VCORE voltage level is programmable to allow power savings if the maximum device speed is not required. Modifying this configurable will impact the max frequencies available for the MCLK, HSMCLK, and SMCLK. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="386" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1af895d4bb38feb3f77dabf6962a6781c6" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::clockSource</definition>
        <argsstring></argsstring>
        <name>clockSource</name>
        <briefdescription>
<para>The clock source for this performance level. </para>        </briefdescription>
        <detaileddescription>
<para>This configuration parameter is not currently used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="392" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a09e1fe7c19c829a647b222312d19fc38" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::DCORESEL</definition>
        <argsstring></argsstring>
        <name>DCORESEL</name>
        <briefdescription>
<para>The DCO frequency range selection. </para>        </briefdescription>
        <detaileddescription>
<para>The nominal DCO frequency is specified via an enumerated value defined in cs.h, for example: CS_DCO_FREQUENCY_12, CS_DCO_FREQUENCY_24, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="399" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a573f00c036a4e62c0a9bb30e506afe32" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::SELM</definition>
        <argsstring></argsstring>
        <name>SELM</name>
        <briefdescription>
<para>The MCLK source. </para>        </briefdescription>
        <detaileddescription>
<para>The source is specified via an enumerated value from cs.h, for example: CS_DCOCLK_SELECT, CS_HFXTCLK_SELECT, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="406" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="406" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1aad681777988e7f68312e24c7ba7d9e9f" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::DIVM</definition>
        <argsstring></argsstring>
        <name>DIVM</name>
        <briefdescription>
<para>The MCLK source divider. </para>        </briefdescription>
        <detaileddescription>
<para>The divide value is specified via an enumerated value from cs.h, for example: CS_CLOCKDIVIDER_1, CS_CLOCKDIVIDER_2, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="413" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a4b2742fe2b13b12b8ac31c9c6f343e99" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::SELS</definition>
        <argsstring></argsstring>
        <name>SELS</name>
        <briefdescription>
<para>The HSMCLK and SMCLK source. </para>        </briefdescription>
        <detaileddescription>
<para>The source is specified via an enumerated value from cs.h, for example: CS_DCOCLK_SELECT, CS_HFXTCLK_SELECT, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="420" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1aa60df7e4c61b02ede0658f00d66e18cd" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::DIVHS</definition>
        <argsstring></argsstring>
        <name>DIVHS</name>
        <briefdescription>
<para>The HSMCLK source divider. </para>        </briefdescription>
        <detaileddescription>
<para>The divide value is specified via an enumerated value from cs.h, for example: CS_CLOCKDIVIDER_1, CS_CLOCKDIVIDER_2, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="427" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1aa40781009e30e8d15b11a825088a76b1" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::DIVS</definition>
        <argsstring></argsstring>
        <name>DIVS</name>
        <briefdescription>
<para>The SMCLK source divider. </para>        </briefdescription>
        <detaileddescription>
<para>The divide value is specified via an enumerated value from cs.h, for example: CS_CLOCKDIVIDER_1, CS_CLOCKDIVIDER_2, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="434" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a4fd56256daf5e2619cdc6a04113f42cd" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::SELB</definition>
        <argsstring></argsstring>
        <name>SELB</name>
        <briefdescription>
<para>The BCLK source. </para>        </briefdescription>
        <detaileddescription>
<para>The source is specified via an enumerated value from cs.h, for example: CS_REFOCLK_SELECT, CS_DCOCLK_SELECT, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="441" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1ad61fc8355446e2c3461954cd590185df" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::SELA</definition>
        <argsstring></argsstring>
        <name>SELA</name>
        <briefdescription>
<para>The ACLK source. </para>        </briefdescription>
        <detaileddescription>
<para>The source is specified via an enumerated value from cs.h, for example: CS_REFOCLK_SELECT, CS_DCOCLK_SELECT, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="448" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a0a73e6a315401e16c605e3c8e90aa2bc" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::DIVA</definition>
        <argsstring></argsstring>
        <name>DIVA</name>
        <briefdescription>
<para>The ACLK source divider. </para>        </briefdescription>
        <detaileddescription>
<para>The divide value is specified via an enumerated value from cs.h, for example: CS_CLOCKDIVIDER_1, CS_CLOCKDIVIDER_2, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="455" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a029b77eb0cfd85c7a1b5b9c687a08b1b" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::flashWaitStates</definition>
        <argsstring></argsstring>
        <name>flashWaitStates</name>
        <briefdescription>
<para>The number of Flash wait-states to be used for this performance level. </para>        </briefdescription>
        <detaileddescription>
<para>The number of wait-states is specified as a positive integer value.</para><para>The flash controller is configurable in terms of the number of memory bus cycles it takes to service any read command. This allows the CPU execution frequency to be higher than the maximum read frequency supported by the flash memory. If the bus clock speed is higher than the native frequency of the flash, the access is stalled for the configured number of wait states, allowing data from the flash to be accessed reliably.</para><para><simplesect kind="note"><para>See the device data sheet for CPU execution frequency and wait-state requirements. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="473" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1aa13b2fcb44c9cee0a5006f7b84b2a0d9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool PowerMSP432_PerfLevel::enableFlashBuffer</definition>
        <argsstring></argsstring>
        <name>enableFlashBuffer</name>
        <briefdescription>
<para>Boolean specifying if Flash read buffering should be enabled for this performance level. </para>        </briefdescription>
        <detaileddescription>
<para>If &apos;true&apos;, buffering will be enabled; if &apos;false&apos;, buffering will be disabled.</para><para>When read buffering is enabled, the flash memory always reads an entire 128-bit line irrespective of the access size of 8, 16, or 32 bits. The 128-bit data and its associated address is internally buffered by the flash controller, so subsequent accesses (expected to be contiguous in nature) within the same 128-bit address boundary are serviced by the buffer. Hence, the flash accesses see wait-states only when the 128-bit boundary is crossed, while read accesses within the buffer&apos;s range are serviced without any bus stalls. If read buffering is disabled, accesses to the flash bypasses the buffer, and the data read from the flash is limited to the width of the access (8, 16, or 32 bits). Each bank has independent settings for the read buffering. In addition, within each bank, the application has independent flexibility to enable read buffering for instruction and data fetches. Read buffers are bypassed during any program or erase operation by the controller to ensure data coherency. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="497" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a5217d2600330749ee725772a9c9494c3" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::MCLK</definition>
        <argsstring></argsstring>
        <name>MCLK</name>
        <briefdescription>
<para>The expected MCLK frequency for this performance level, in Hz. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this is an informational value; it is the expected MCLK frequency given the DCO frequency and source dividers specified above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="504" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1aa03094315638698c0bc4a337b70aae19" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::HSMCLK</definition>
        <argsstring></argsstring>
        <name>HSMCLK</name>
        <briefdescription>
<para>The expected HSMCLK frequency for this performance level, in Hz. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this is an informational value; it is the expected HSMCLK frequency given the DCO frequency and source dividers specified above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="511" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a860261b6485516b8df3099021e979661" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::SMCLK</definition>
        <argsstring></argsstring>
        <name>SMCLK</name>
        <briefdescription>
<para>The expected SMCLK frequency for this performance level, in Hz. </para>        </briefdescription>
        <detaileddescription>
<para>Note that this is an informational value; it is the expected SMCLK frequency given the DCO frequency and source dividers specified above. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="518" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="518" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1ac29bd5ce6de5c90acbcf535780dd94bc" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::BCLK</definition>
        <argsstring></argsstring>
        <name>BCLK</name>
        <briefdescription>
<para>The BCLK frequency for this performance level. Currently only 32768 Hz is supported. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="523" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1afca031b655668dbed6ad8bfbbb918cd5" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::ACLK</definition>
        <argsstring></argsstring>
        <name>ACLK</name>
        <briefdescription>
<para>The ACLK frequency for this performance level. Currently only 32768 Hz is supported. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="528" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="528" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_power_m_s_p432___perf_level_1a2404b7d8870a764f17a35bc8701bf827" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int PowerMSP432_PerfLevel::tuneFreqDCO</definition>
        <argsstring></argsstring>
        <name>tuneFreqDCO</name>
        <briefdescription>
<para>The target center frequency for custom tuning of the DCO, in Hz. This frequency value is used only when DCORESEL is specified as CS_DCO_TUNE_FREQ. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="534" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="534" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure defining a performance level. </para>    </briefdescription>
    <detaileddescription>
<para>The MCU performance level can be set with <ref refid="_power_8h_1ae40483e9ed7c626a02399996d3a7878a" kindref="member">Power_setPerformanceLevel()</ref>. A performance level is defined by this <ref refid="struct_power_m_s_p432___perf_level" kindref="compound">PowerMSP432_PerfLevel</ref> structure.</para><para>The Power driver currently supports four pre-defined performance levels: <programlisting><codeline><highlight class="normal">Level<sp/><sp/><sp/><sp/>MCLK<sp/>(MHz)<sp/><sp/><sp/><sp/>HSMCLK<sp/>(MHz)<sp/><sp/><sp/><sp/>SMCLK<sp/>(MHz)<sp/><sp/><sp/><sp/>ACLK<sp/>(Hz)</highlight></codeline>
<codeline><highlight class="normal">-----<sp/><sp/><sp/><sp/>----------<sp/><sp/><sp/><sp/>------------<sp/><sp/><sp/><sp/>-----------<sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>48<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32768</highlight></codeline>
</programlisting></para><para>Up to four optional &apos;custom&apos; performance levels can be defined by the user. Performance levels are designated by an index, starting with zero. Any custom performance levels will be indexed following the last pre-defined level. For example, if there are 4 pre-defined levels, they will have indices from &apos;0&apos; to &apos;3&apos;. If there are custom levels defined, they will be indexed starting with &apos;4&apos;.</para><para>Eight performance level constraints are supported, one for each of the four pre-defined levels: <programlisting><codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_0</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_1</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_2</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_3</highlight></codeline>
</programlisting> plus four for the optional custom performance levels: <programlisting><codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_4</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_5</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_6</highlight></codeline>
<codeline><highlight class="normal">PowerMSP432_DISALLOW_PERFLEVEL_7</highlight></codeline>
</programlisting></para><para>The parameters that are used to define a performance level are shown below.</para><para><simplesect kind="warning"><para>There is very limited runtime error checking of the different parameters, and no checking that the ratios and parameter combinations do not result in an invalid device configuration (which could overclock or damage the device). It is therefore critical that the user ensures the values specified for a custom performance level are correct.</para></simplesect>
To define custom performance levels the user must add an array of <ref refid="struct_power_m_s_p432___perf_level" kindref="compound">PowerMSP432_PerfLevel</ref> structures to their board file, and then reference this array in the PowerMSP432_config structure. An example is shown below.</para><para>First, if not already included in the board file, add the includes of cs.h and pcm.h</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/devices/msp432p4xx/driverlib/cs.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/devices/msp432p4xx/driverlib/pcm.h&gt;</highlight></codeline>
</programlisting></para><para>Next, add an array with two new performance levels:</para><para><programlisting><codeline><highlight class="normal">PowerMSP432_PerfLevel<sp/>myPerfLevels[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>.activeState<sp/>=<sp/>PCM_AM_DCDC_VCORE0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.VCORE<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DCORESEL<sp/>=<sp/>CS_DCO_FREQUENCY_12,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELM<sp/>=<sp/>CS_HFXTCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVM<sp/>=<sp/>CS_CLOCK_DIVIDER_4,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELS<sp/>=<sp/>CS_HFXTCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVHS<sp/>=<sp/>CS_CLOCK_DIVIDER_16,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVS<sp/>=<sp/>CS_CLOCK_DIVIDER_16,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELB<sp/>=<sp/>CS_LFXTCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELA<sp/>=<sp/>CS_LFXTCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVA<sp/>=<sp/>CS_CLOCK_DIVIDER_1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.flashWaitStates<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.enableFlashBuffer<sp/>=<sp/>false,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.MCLK<sp/>=<sp/>12000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.HSMCLK<sp/>=<sp/>3000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SMCLK<sp/>=<sp/>3000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.BCLK<sp/>=<sp/>32768,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.ACLK<sp/>=<sp/>32768</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>.activeState<sp/>=<sp/>PCM_AM_DCDC_VCORE0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.VCORE<sp/>=<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DCORESEL<sp/>=<sp/>CS_DCO_FREQUENCY_24,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELM<sp/>=<sp/>CS_DCOCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVM<sp/>=<sp/>CS_CLOCK_DIVIDER_1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELS<sp/>=<sp/>CS_DCOCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVHS<sp/>=<sp/>CS_CLOCK_DIVIDER_4,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVS<sp/>=<sp/>CS_CLOCK_DIVIDER_4,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELB<sp/>=<sp/>CS_REFOCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SELA<sp/>=<sp/>CS_REFOCLK_SELECT,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.DIVA<sp/>=<sp/>CS_CLOCK_DIVIDER_1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.flashWaitStates<sp/>=<sp/>1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.enableFlashBuffer<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.MCLK<sp/>=<sp/>24000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.HSMCLK<sp/>=<sp/>6000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.SMCLK<sp/>=<sp/>6000000,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.BCLK<sp/>=<sp/>32768,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>.ACLK<sp/>=<sp/>32768</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para><para>Then, update the PowerMSP432_config structure to 1) reference the new custom levels, and 2) as appropriate, enable extended performance scaling support, and define the relevant extended configuration parameters. In the first custom perf level shown above the HFXT and LFXT crystals are used as clock sources, so for this example the extended support parameters need to be specfied.</para><para>The code below shows additions to the PowerMSP432_config structure for this example. The first two additions to PowerMSP432_config reference the array of custom perf levels, and indicate the number of custom levels. The third addition enables extended support for crystals. The remaining parameters define crystal settings, plus an application-provided ISR function for handling any Clock System fault interrupts.</para><para><programlisting><codeline><highlight class="normal">const<sp/>PowerMSP432_ConfigV1<sp/>PowerMSP432_config<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.customPerfLevels<sp/>=<sp/>myPerfLevels,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.numCustom<sp/>=<sp/>sizeof(myPerfLevels)<sp/>/<sp/>sizeof(PowerMSP432_PerfLevel),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.useExtendedPerf<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.HFXTFREQ<sp/>=<sp/>CS_48MHZ,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.configurePinHFXT<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.bypassHFXT<sp/>=<sp/>false,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.configurePinLFXT<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.bypassLFXT<sp/>=<sp/>false,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.LFXTDRIVE<sp/>=<sp/>CS_LFXT_DRIVE3,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.enableInterruptsCS<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.priorityInterruptsCS<sp/>=<sp/>~0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.isrCS<sp/>=<sp/>&amp;isrCS</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <location file="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" line="352" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/power/PowerMSP432.h" bodystart="352" bodyend="535"/>
    <listofallmembers>
      <member refid="struct_power_m_s_p432___perf_level_1afca031b655668dbed6ad8bfbbb918cd5" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>ACLK</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a82d4c23546e9735b7314836e6cdf4717" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>activeState</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1ac29bd5ce6de5c90acbcf535780dd94bc" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>BCLK</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1af895d4bb38feb3f77dabf6962a6781c6" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>clockSource</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a09e1fe7c19c829a647b222312d19fc38" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>DCORESEL</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a0a73e6a315401e16c605e3c8e90aa2bc" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>DIVA</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1aa60df7e4c61b02ede0658f00d66e18cd" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>DIVHS</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1aad681777988e7f68312e24c7ba7d9e9f" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>DIVM</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1aa40781009e30e8d15b11a825088a76b1" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>DIVS</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1aa13b2fcb44c9cee0a5006f7b84b2a0d9" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>enableFlashBuffer</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a029b77eb0cfd85c7a1b5b9c687a08b1b" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>flashWaitStates</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1aa03094315638698c0bc4a337b70aae19" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>HSMCLK</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a5217d2600330749ee725772a9c9494c3" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>MCLK</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1ad61fc8355446e2c3461954cd590185df" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>SELA</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a4fd56256daf5e2619cdc6a04113f42cd" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>SELB</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a573f00c036a4e62c0a9bb30e506afe32" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>SELM</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a4b2742fe2b13b12b8ac31c9c6f343e99" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>SELS</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a860261b6485516b8df3099021e979661" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>SMCLK</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a2404b7d8870a764f17a35bc8701bf827" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>tuneFreqDCO</name></member>
      <member refid="struct_power_m_s_p432___perf_level_1a6c0084d8e2d45959783590ce98074b3b" prot="public" virt="non-virtual"><scope>PowerMSP432_PerfLevel</scope><name>VCORE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
