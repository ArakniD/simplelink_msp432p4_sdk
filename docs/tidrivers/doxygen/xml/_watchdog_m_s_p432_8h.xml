<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_watchdog_m_s_p432_8h" kind="file" language="C++">
    <compoundname>WatchdogMSP432.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_watchdog_8h" local="no">ti/drivers/Watchdog.h</includes>
    <includes local="no">ti/drivers/dpl/HwiP.h</includes>
    <incdepgraph>
      <node id="363">
        <label>stdbool.h</label>
      </node>
      <node id="362">
        <label>stdint.h</label>
      </node>
      <node id="364">
        <label>ti/drivers/Watchdog.h</label>
        <link refid="_watchdog_8h"/>
        <childnode refid="362" relation="include">
        </childnode>
      </node>
      <node id="365">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="361">
        <label>WatchdogMSP432.h</label>
        <link refid="_watchdog_m_s_p432_8h"/>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_watchdog_m_s_p432___h_w_attrs" prot="public">WatchdogMSP432_HWAttrs</innerclass>
    <innerclass refid="struct_watchdog_m_s_p432___object" prot="public">WatchdogMSP432_Object</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_watchdog_m_s_p432_8h_1a7ccdf8f14ade7da8949b94ef66ec8a4f" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_watchdog___fxn_table" kindref="compound">Watchdog_FxnTable</ref></type>
        <definition>const Watchdog_FxnTable WatchdogMSP432_fxnTable</definition>
        <argsstring></argsstring>
        <name>WatchdogMSP432_fxnTable</name>
        <briefdescription>
<para>Watchdog function table for MSP432. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/watchdog/WatchdogMSP432.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Watchdog driver implementation for MSP432. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para>The Watchdog header file for MSP432 should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Watchdog.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/watchdog/WatchdogMSP432.h&gt;</highlight></codeline>
</programlisting></para><para>Refer to <ref refid="_watchdog_8h" kindref="compound">Watchdog.h</ref> for a complete description of APIs &amp; example of use.</para><para><heading level="2">Overview</heading>
</para><para>The MSP432 Watchdog Timer will cause resets at an interval based on the count calculated from the clock source and clock divider specified in the <ref refid="struct_watchdog_m_s_p432___h_w_attrs" kindref="compound">WatchdogMSP432_HWAttrs</ref>. By default the Watchdog driver has resets turned on. This means that if <ref refid="_watchdog_8h_1a396decd6b1807db10c636f9987c3be4c" kindref="member">Watchdog_clear()</ref> is not called to reset the Watchdog timer before it times out, a reset will be generated. <ref refid="_watchdog_8h_1a1c0dfea7011b06f303d01afb631ffbdd" kindref="member">Watchdog_close()</ref> will stop the Watchdog timer. To restart it again, <ref refid="_watchdog_8h_1a26795f67f599b74de830ca7bf36bdced" kindref="member">Watchdog_open()</ref> must be called.</para><para>Opening the Watchdog driver with resets turned off (Using the <ref refid="struct_watchdog___params_1a94b5d650f8beb7dce719360404039ccf" kindref="member">Watchdog_Params.resetMode</ref> parameter) allows the Watchdog Timer to be used like another timer interrupt. The callback fxn provided in the params will be executed when the timer expires.</para><para><simplesect kind="warning"><para>The watchdog peripheral does not support a Non-Maskable Interrupt (NMI).</para></simplesect>
<heading level="2">Unsupported Functionality</heading>
</para><para><orderedlist>
<listitem><para><ref refid="struct_watchdog___params_1abe7792eef8afa2972a4625f428b7241b" kindref="member">Watchdog_Params.debugStallMode</ref> is not supported by this implementation.</para></listitem><listitem><para><ref refid="struct_watchdog___params_1a710aaa2504356ab3d3f9a27ac19ddb85" kindref="member">Watchdog_Params.callbackFxn</ref> is not supported when using <ref refid="_watchdog_8h_1ada0db7216129d7dad494bb0cd0169f88aafccd6330c396d9ffc2786524625bf1f" kindref="member">Watchdog_RESET_ON</ref> mode.</para></listitem><listitem><para><ref refid="_watchdog_8h_1a63ea82dda83e42e236578b9810e56880" kindref="member">Watchdog_setReload()</ref> and <ref refid="_watchdog_8h_1a7b93cd0bd3a6f11aa28b0c7219755979" kindref="member">Watchdog_convertMsToTicks()</ref> APIs are not supported by this implementation. </para></listitem></orderedlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2015-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatchdogMSP432.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>Watchdog<sp/>driver<sp/>implementation<sp/>for<sp/>MSP432</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Watchdog<sp/>header<sp/>file<sp/>for<sp/>MSP432<sp/>should<sp/>be<sp/>included<sp/>in<sp/>an<sp/>application</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/Watchdog.h&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/watchdog/WatchdogMSP432.h&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>Refer<sp/>to<sp/>@ref<sp/>Watchdog.h<sp/>for<sp/>a<sp/>complete<sp/>description<sp/>of<sp/>APIs<sp/>&amp;<sp/>example<sp/>of</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>use.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>MSP432<sp/>Watchdog<sp/>Timer<sp/>will<sp/>cause<sp/>resets<sp/>at<sp/>an<sp/>interval<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>count<sp/>calculated<sp/>from<sp/>the<sp/>clock<sp/>source<sp/>and<sp/>clock<sp/>divider<sp/>specified<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>WatchdogMSP432_HWAttrs.<sp/>By<sp/>default<sp/>the<sp/>Watchdog<sp/>driver<sp/>has<sp/>resets<sp/>turned<sp/>on.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>means<sp/>that<sp/>if<sp/>Watchdog_clear()<sp/>is<sp/>not<sp/>called<sp/>to<sp/>reset<sp/>the<sp/>Watchdog</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>timer<sp/>before<sp/>it<sp/>times<sp/>out,<sp/>a<sp/>reset<sp/>will<sp/>be<sp/>generated.<sp/>Watchdog_close()<sp/>will</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>stop<sp/>the<sp/>Watchdog<sp/>timer.<sp/>To<sp/>restart<sp/>it<sp/>again,<sp/>Watchdog_open()<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>called.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>Opening<sp/>the<sp/>Watchdog<sp/>driver<sp/>with<sp/>resets<sp/>turned<sp/>off<sp/>(Using<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>#Watchdog_Params.resetMode<sp/>parameter)<sp/>allows<sp/>the<sp/>Watchdog<sp/>Timer<sp/>to<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>like<sp/>another<sp/>timer<sp/>interrupt.<sp/><sp/>The<sp/>callback<sp/>fxn<sp/>provided<sp/>in<sp/>the<sp/>params<sp/>will</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>executed<sp/>when<sp/>the<sp/>timer<sp/>expires.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>@warning<sp/>The<sp/>watchdog<sp/>peripheral<sp/>does<sp/>not<sp/>support<sp/>a<sp/>Non-Maskable<sp/>Interrupt<sp/>(NMI).</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Unsupported<sp/>Functionality<sp/>#</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>1.<sp/><sp/>#Watchdog_Params.debugStallMode<sp/>is<sp/>not<sp/>supported<sp/>by<sp/>this<sp/>implementation.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>2.<sp/><sp/>#Watchdog_Params.callbackFxn<sp/>is<sp/>not<sp/>supported<sp/>when<sp/>using</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>#Watchdog_RESET_ON<sp/>mode.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>3.<sp/><sp/>Watchdog_setReload()<sp/>and<sp/>Watchdog_convertMsToTicks()<sp/>APIs<sp/>are<sp/>not</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>supported<sp/>by<sp/>this<sp/>implementation.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>******************************************************************************</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_watchdog_WatchdogMSP432__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_watchdog_WatchdogMSP432__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_watchdog_8h" kindref="compound">ti/drivers/Watchdog.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/HwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">/*<sp/>Add<sp/>WatchdogMSP432_STATUS_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/*<sp/>Add<sp/>WatchdogMSP432_CMD_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_watchdog___fxn_table" kindref="compound">Watchdog_FxnTable</ref><sp/><ref refid="_watchdog_m_s_p432_8h_1a7ccdf8f14ade7da8949b94ef66ec8a4f" kindref="member">WatchdogMSP432_fxnTable</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="struct_watchdog_m_s_p432___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147" refid="struct_watchdog_m_s_p432___h_w_attrs_1a176998d12aea7a88091a774d2808c812" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs_1a176998d12aea7a88091a774d2808c812" kindref="member">baseAddr</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="struct_watchdog_m_s_p432___h_w_attrs_1ab8e3bf204cffaec1738b0ac6dde3d591" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs_1ab8e3bf204cffaec1738b0ac6dde3d591" kindref="member">intNum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149" refid="struct_watchdog_m_s_p432___h_w_attrs_1a64f3c82ab3ce0e2834ac466cbe74569c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs_1a64f3c82ab3ce0e2834ac466cbe74569c" kindref="member">intPriority</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="150" refid="struct_watchdog_m_s_p432___h_w_attrs_1aa1318d649694d7c5537cc1f9594aac01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs_1aa1318d649694d7c5537cc1f9594aac01" kindref="member">clockSource</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="151" refid="struct_watchdog_m_s_p432___h_w_attrs_1a047e52982463266b23febfd2835b538f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs_1a047e52982463266b23febfd2835b538f" kindref="member">clockDivider</ref>;<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/><ref refid="struct_watchdog_m_s_p432___h_w_attrs" kindref="compound">WatchdogMSP432_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="struct_watchdog_m_s_p432___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160" refid="struct_watchdog_m_s_p432___object_1a23669cbdf9422b9ffa15830dde21a10d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_watchdog_8h_1ada0db7216129d7dad494bb0cd0169f88" kindref="member">Watchdog_ResetMode</ref><sp/><ref refid="struct_watchdog_m_s_p432___object_1a23669cbdf9422b9ffa15830dde21a10d" kindref="member">resetMode</ref>;</highlight></codeline>
<codeline lineno="161" refid="struct_watchdog_m_s_p432___object_1a2ab0f5242ebff32a5b73f04245f44f94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Handle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_watchdog_m_s_p432___object_1a2ab0f5242ebff32a5b73f04245f44f94" kindref="member">hwiHandle</ref>;</highlight></codeline>
<codeline lineno="162" refid="struct_watchdog_m_s_p432___object_1a8e1ce4085157c2a708fecb5a6479797f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_watchdog_m_s_p432___object_1a8e1ce4085157c2a708fecb5a6479797f" kindref="member">isOpen</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>for<sp/>open/close<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">}<sp/><ref refid="struct_watchdog_m_s_p432___object" kindref="compound">WatchdogMSP432_Object</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_watchdog_WatchdogMSP432__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/source/ti/drivers/watchdog/WatchdogMSP432.h"/>
  </compounddef>
</doxygen>
