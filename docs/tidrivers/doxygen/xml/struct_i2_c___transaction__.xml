<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_i2_c___transaction__" kind="struct" language="C++" prot="public">
    <compoundname>I2C_Transaction_</compoundname>
    <includes refid="_i2_c_8h" local="no">I2C.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_i2_c___transaction___1a5d9c494aca871ebb272899856e1fa6bb" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* I2C_Transaction_::writeBuf</definition>
        <argsstring></argsstring>
        <name>writeBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a buffer of at least <computeroutput>writeCount</computeroutput> bytes. If <computeroutput>writeCount</computeroutput> is 0, this pointer may remain uninitialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="434" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1a3bee82494f85dc33d1229e48a2ec63c8" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t I2C_Transaction_::writeCount</definition>
        <argsstring></argsstring>
        <name>writeCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bytes to write to the I2C slave device. A value of 0 indicates no data will be written to the slave device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="437" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1aca335a8f98036308396f27fddeb96f7b" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* I2C_Transaction_::readBuf</definition>
        <argsstring></argsstring>
        <name>readBuf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pointer to a buffer of at least <computeroutput>readCount</computeroutput> bytes. If <computeroutput>readCount</computeroutput> is 0, this pointer may remain uninitialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="440" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1a175470cacf5d42b11d505e2196ff6494" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t I2C_Transaction_::readCount</definition>
        <argsstring></argsstring>
        <name>readCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of bytes to read from the I2C slave device. A value of 0 indicates no data will be read from the slave device. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="443" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1a09a6dc5d7ab40ed03cb0442feb456889" prot="public" static="no" mutable="no">
        <type>uint_least8_t</type>
        <definition>uint_least8_t I2C_Transaction_::slaveAddress</definition>
        <argsstring></argsstring>
        <name>slaveAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>I2C slave address of the slave device </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="445" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1a5c74a2359742d69b0e9108bb342ded00" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* I2C_Transaction_::arg</definition>
        <argsstring></argsstring>
        <name>arg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optional application argument. This argument will be passed to the callback function specified by <ref refid="struct_i2_c___params___1acd2b2ca0da16c1f017ac32cc4831b31e" kindref="member">I2C_Params.transferCallbackFxn</ref> when using <ref refid="_i2_c_8h_1aa47ee1c12e45d10f0beb6ed724704dfea129731a7edeb285f43a54b2cf9f5ac72" kindref="member">I2C_MODE_CALLBACK</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="449" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c___transaction___1a568092ead614401487c18c850e93540c" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* I2C_Transaction_::nextPtr</definition>
        <argsstring></argsstring>
        <name>nextPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is reserved for use by the driver and must never be modified by the application. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="452" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure used to perform I2C bus transfers. </para>    </briefdescription>
    <detaileddescription>
<para>The application is responsible for allocating and initializing an I2C_Transaction structure prior to passing it to I2C_Transfer(). This structure must persist in memory unmodified until the transfer is complete. This driver will always perform write operations first. Transmission of the I2C slave address with the appropriate read/write bit is handled internally by this driver.</para><para><simplesect kind="note"><para><ref refid="_i2_c_8h_1adb9098b8bae10ab04381350227058a51" kindref="member">I2C_Transaction</ref> structures cannot be re-used until the previous transaction has completed.</para></simplesect>
<simplesect kind="see"><para><ref refid="_i2_c_8h_1ac5d827b67fe77d7d179026941cc069d7" kindref="member">I2C_transfer()</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="exports/tidrivers_msp432/source/ti/drivers/I2C.h" line="431" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2C.h" bodystart="431" bodyend="453"/>
    <listofallmembers>
      <member refid="struct_i2_c___transaction___1a5c74a2359742d69b0e9108bb342ded00" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>arg</name></member>
      <member refid="struct_i2_c___transaction___1a568092ead614401487c18c850e93540c" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>nextPtr</name></member>
      <member refid="struct_i2_c___transaction___1aca335a8f98036308396f27fddeb96f7b" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>readBuf</name></member>
      <member refid="struct_i2_c___transaction___1a175470cacf5d42b11d505e2196ff6494" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>readCount</name></member>
      <member refid="struct_i2_c___transaction___1a09a6dc5d7ab40ed03cb0442feb456889" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>slaveAddress</name></member>
      <member refid="struct_i2_c___transaction___1a5d9c494aca871ebb272899856e1fa6bb" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>writeBuf</name></member>
      <member refid="struct_i2_c___transaction___1a3bee82494f85dc33d1229e48a2ec63c8" prot="public" virt="non-virtual"><scope>I2C_Transaction_</scope><name>writeCount</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
