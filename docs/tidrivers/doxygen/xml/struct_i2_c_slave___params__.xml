<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_i2_c_slave___params__" kind="struct" language="C++" prot="public">
    <compoundname>I2CSlave_Params_</compoundname>
    <includes refid="_i2_c_slave_8h" local="no">I2CSlave.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_i2_c_slave___params___1aa60e2165d3547d72019a5580c1215a00" prot="public" static="no" mutable="no">
        <type><ref refid="_i2_c_slave_8h_1a8797c0931604cbc2cc7ca6d362e9cb3e" kindref="member">I2CSlave_TransferMode</ref></type>
        <definition>I2CSlave_TransferMode I2CSlave_Params_::transferMode</definition>
        <argsstring></argsstring>
        <name>transferMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blocking or Callback mode </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" line="274" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c_slave___params___1a037f4cd5e7b287114f3be57fc87c4f73" prot="public" static="no" mutable="no">
        <type><ref refid="_i2_c_slave_8h_1a22bd71094a8a815bccdf665d85900412" kindref="member">I2CSlave_CallbackFxn</ref></type>
        <definition>I2CSlave_CallbackFxn I2CSlave_Params_::transferCallbackFxn</definition>
        <argsstring></argsstring>
        <name>transferCallbackFxn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Callback function pointer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" line="276" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_i2_c_slave___params___1a2ba42d304328ef32b99f3f800c4e1187" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* I2CSlave_Params_::custom</definition>
        <argsstring></argsstring>
        <name>custom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom argument used by driver implementation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" line="278" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>I2CSlave Parameters. </para>    </briefdescription>
    <detaileddescription>
<para>I2CSlave parameters are used to with the <ref refid="_i2_c_slave_8h_1a18e508a752270fa45b08642d908a8bc7" kindref="member">I2CSlave_open()</ref> call. Default values for these parameters are set using <ref refid="_i2_c_slave_8h_1a3c29bf7436be17348ea73fabb6ede3ae" kindref="member">I2CSlave_Params_init()</ref>.</para><para>If I2CSlave_TransferMode is set to I2CSLAVE_MODE_BLOCKING then I2CSlave_read or I2CSlave_write function calls will block thread execution until the transaction has completed.</para><para>If I2CSlave_TransferMode is set to I2CSLAVE_MODE_CALLBACK then I2CSlave read/write will not block thread execution and it will call the function specified by transferCallbackFxn. (regardless of error state).</para><para><simplesect kind="see"><para><ref refid="_i2_c_slave_8h_1a3c29bf7436be17348ea73fabb6ede3ae" kindref="member">I2CSlave_Params_init()</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="110">
        <label>I2CSlave_Config_</label>
        <link refid="struct_i2_c_slave___config__"/>
        <childnode refid="111" relation="usage">
          <edgelabel>fxnTablePtr</edgelabel>
        </childnode>
      </node>
      <node id="109">
        <label>I2CSlave_Params_</label>
        <link refid="struct_i2_c_slave___params__"/>
        <childnode refid="110" relation="usage">
          <edgelabel>transferCallbackFxn</edgelabel>
        </childnode>
      </node>
      <node id="111">
        <label>I2CSlave_FxnTable_</label>
        <link refid="struct_i2_c_slave___fxn_table__"/>
        <childnode refid="110" relation="usage">
          <edgelabel>writeFxn</edgelabel>
          <edgelabel>closeFxn</edgelabel>
          <edgelabel>initFxn</edgelabel>
          <edgelabel>controlFxn</edgelabel>
          <edgelabel>openFxn</edgelabel>
          <edgelabel>readFxn</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" line="272" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/I2CSlave.h" bodystart="272" bodyend="279"/>
    <listofallmembers>
      <member refid="struct_i2_c_slave___params___1a2ba42d304328ef32b99f3f800c4e1187" prot="public" virt="non-virtual"><scope>I2CSlave_Params_</scope><name>custom</name></member>
      <member refid="struct_i2_c_slave___params___1a037f4cd5e7b287114f3be57fc87c4f73" prot="public" virt="non-virtual"><scope>I2CSlave_Params_</scope><name>transferCallbackFxn</name></member>
      <member refid="struct_i2_c_slave___params___1aa60e2165d3547d72019a5580c1215a00" prot="public" virt="non-virtual"><scope>I2CSlave_Params_</scope><name>transferMode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
