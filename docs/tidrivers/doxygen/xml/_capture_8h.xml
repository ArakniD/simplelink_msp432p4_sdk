<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_capture_8h" kind="file" language="C++">
    <compoundname>Capture.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="_capture_m_s_p432_8h" local="no">CaptureMSP432.h</includedby>
    <incdepgraph>
      <node id="36">
        <label>stdint.h</label>
      </node>
      <node id="35">
        <label>Capture.h</label>
        <link refid="_capture_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="37">
        <label>Capture.h</label>
        <link refid="_capture_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>CaptureMSP432.h</label>
        <link refid="_capture_m_s_p432_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_capture___params__" prot="public">Capture_Params_</innerclass>
    <innerclass refid="struct_capture___fxn_table__" prot="public">Capture_FxnTable_</innerclass>
    <innerclass refid="struct_capture___config__" prot="public">Capture_Config_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_capture_8h_1afcb908fe248e5aa0f0f83d6b0dac392a" prot="public" static="no">
        <name>Capture_CMD_RESERVED</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Capture_control command code reservation offset. Capture driver implementations should offset command codes with Capture_CMD_RESERVED growing positively.</para><para>Example implementation specific command codes: <programlisting><codeline><highlight class="normal">#define<sp/>CaptureXYZ_CMD_COMMAND0<sp/><sp/><sp/><sp/><sp/><sp/>Capture_CMD_RESERVED<sp/>+<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CaptureXYZ_CMD_COMMAND1<sp/><sp/><sp/><sp/><sp/><sp/>Capture_CMD_RESERVED<sp/>+<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="187" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a38272a451aa6ff7ea39a9e0eb2574df8" prot="public" static="no">
        <name>Capture_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Capture_control status code reservation offset. Capture driver implementations should offset status codes with Capture_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>CaptureXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/><sp/>Capture_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CaptureXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/><sp/>Capture_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="200" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" prot="public" static="no">
        <name>Capture_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="205" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" prot="public" static="no">
        <name>Capture_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="210" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a18b1cc41db33b8504db3d1378265c187" prot="public" static="no">
        <name>Capture_STATUS_UNDEFINEDCMD</name>
        <initializer>(-2)</initializer>
        <briefdescription>
<para>An error status code returned by <ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref> for undefined command codes. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref> returns Capture_STATUS_UNDEFINEDCMD if the control code is not recognized by the driver implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="219" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1af78f6730554b371139cc77ed73348a14" prot="public" static="no">
        <name>CAPTURE_CMD_RESERVED</name>
        <initializer><ref refid="_capture_8h_1afcb908fe248e5aa0f0f83d6b0dac392a" kindref="member">Capture_CMD_RESERVED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="484" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a402831b159da8388077d6a72f1abaec3" prot="public" static="no">
        <name>CAPTURE_STATUS_RESERVED</name>
        <initializer><ref refid="_capture_8h_1a38272a451aa6ff7ea39a9e0eb2574df8" kindref="member">Capture_STATUS_RESERVED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="485" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a8fc4681430c2c76005b8aa2807f9d921" prot="public" static="no">
        <name>CAPTURE_STATUS_SUCCESS</name>
        <initializer><ref refid="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" kindref="member">Capture_STATUS_SUCCESS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="486" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a3781c43a72b84b51b97a472cc1946247" prot="public" static="no">
        <name>CAPTURE_STATUS_ERROR</name>
        <initializer><ref refid="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" kindref="member">Capture_STATUS_ERROR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="487" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a51bab6d8023b8df59305f1c9e841cc93" prot="public" static="no">
        <name>CAPTURE_STATUS_UNDEFINEDCMD</name>
        <initializer><ref refid="_capture_8h_1a18b1cc41db33b8504db3d1378265c187" kindref="member">Capture_STATUS_UNDEFINEDCMD</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="488" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1ae5fb63d1a30a174c3b638702ba0db5ec" prot="public" static="no">
        <name>CAPTURE_MODE_RISING_RISING</name>
        <initializer><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad86339bd12f32a5783138536e92bf35d" kindref="member">Capture_RISING_EDGE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="489" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a65280eb6ee633f663af1f2efd5dcf365" prot="public" static="no">
        <name>CAPTURE_MODE_FALLING_FALLING</name>
        <initializer><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad81d8c687bce527cf986b738dcc0bc5e" kindref="member">Capture_FALLING_EDGE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="490" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a76a7cecaf1d3577ce2599ca2d4b81255" prot="public" static="no">
        <name>CAPTURE_MODE_ANY_EDGE</name>
        <initializer><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805a3cda7df083b56d1e1ed54d19d1813528" kindref="member">Capture_ANY_EDGE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="491" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a68d9d33ac6f96a390af7e6ce26dadd6f" prot="public" static="no">
        <name>CAPTURE_PERIOD_US</name>
        <initializer><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a93407c4aa7ee40cfe498082b7cf2f246" kindref="member">Capture_PERIOD_US</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="492" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a9eee4caf7f6a26b71deb276f58a466d8" prot="public" static="no">
        <name>CAPTURE_PERIOD_HZ</name>
        <initializer><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a7a720a1bd6f1c959c00717481cfa3272" kindref="member">Capture_PERIOD_HZ</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="493" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a4d48ebee4fb03483645fb0e081a19e08" prot="public" static="no">
        <name>CAPTURE_PERIOD_COUNTS</name>
        <initializer><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a3803ec2ba167766ee6a4b06f4a21d86c" kindref="member">Capture_PERIOD_COUNTS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="494" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a329b427d7215e176591a8dd21c1c70ee" prot="public" static="no">
        <name>Capture_Period_Unit</name>
        <initializer><ref refid="_capture_8h_1a0179a1a6aa007381d609f7aba58a042f" kindref="member">Capture_PeriodUnits</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="495" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_capture_8h_1a6143f2fd448c7dd22004fa5087568805" prot="public" static="no">
        <name>Capture_Mode_</name>
        <enumvalue id="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad86339bd12f32a5783138536e92bf35d" prot="public">
          <name>Capture_RISING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on rising edges. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad81d8c687bce527cf986b738dcc0bc5e" prot="public">
          <name>Capture_FALLING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on falling edges. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6143f2fd448c7dd22004fa5087568805a3cda7df083b56d1e1ed54d19d1813528" prot="public">
          <name>Capture_ANY_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on both rising and falling edges. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture mode settings. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the capture modes that may be specified in <ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="233" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="enum" id="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957" prot="public" static="no">
        <name>Capture_PeriodUnits_</name>
        <enumvalue id="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a93407c4aa7ee40cfe498082b7cf2f246" prot="public">
          <name>Capture_PERIOD_US</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in micro seconds. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a7a720a1bd6f1c959c00717481cfa3272" prot="public">
          <name>Capture_PERIOD_HZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in hertz; interrupts per second. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a3803ec2ba167766ee6a4b06f4a21d86c" prot="public">
          <name>Capture_PERIOD_COUNTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in timer ticks. Varies by board. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture period unit enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the units that may be specified for the period in <ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="246" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="246" bodyend="252"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" prot="public" static="no">
        <type>struct <ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref> *</type>
        <definition>typedef struct Capture_Config_* Capture_Handle</definition>
        <argsstring></argsstring>
        <name>Capture_Handle</name>
        <briefdescription>
<para>A handle that is returned from a <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="224" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1aa908047f2a1c31fc994716cd34f556f6" prot="public" static="no">
        <type>enum <ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805" kindref="member">Capture_Mode_</ref></type>
        <definition>typedef enum Capture_Mode_  Capture_Mode</definition>
        <argsstring></argsstring>
        <name>Capture_Mode</name>
        <briefdescription>
<para>Capture mode settings. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the capture modes that may be specified in <ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a0179a1a6aa007381d609f7aba58a042f" prot="public" static="no">
        <type>enum <ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957" kindref="member">Capture_PeriodUnits_</ref></type>
        <definition>typedef enum Capture_PeriodUnits_  Capture_PeriodUnits</definition>
        <argsstring></argsstring>
        <name>Capture_PeriodUnits</name>
        <briefdescription>
<para>Capture period unit enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the units that may be specified for the period in <ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a1c76952161fb6646781648835c250626" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_CallBackFxn) (Capture_Handle handle, uint32_t interval)</definition>
        <argsstring>)(Capture_Handle handle, uint32_t interval)</argsstring>
        <name>Capture_CallBackFxn</name>
        <briefdescription>
<para>Capture callback function. </para>        </briefdescription>
        <detaileddescription>
<para>User definable callback function prototype. The capture driver will call the defined function and pass in the capture driver&apos;s handle and the pointer to the user-specified the argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>interval</parametername>
</parameternamelist>
<parameterdescription>
<para>Interval of two triggering edges in <ref refid="_capture_8h_1a0179a1a6aa007381d609f7aba58a042f" kindref="member">Capture_PeriodUnits</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="267" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" prot="public" static="no">
        <type>struct <ref refid="struct_capture___params__" kindref="compound">Capture_Params_</ref></type>
        <definition>typedef struct Capture_Params_  Capture_Params</definition>
        <argsstring></argsstring>
        <name>Capture_Params</name>
        <briefdescription>
<para>Capture Parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Capture parameters are used by the <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> call. Default values for these parameters are set using <ref refid="_capture_8h_1ae8cb953d04c279876165c7697726b202" kindref="member">Capture_Params_init()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1ac94758009fcf136975142fae5a76908d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_CloseFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_CloseFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="291" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" prot="public" static="no">
        <type>int_fast16_t(*</type>
        <definition>typedef int_fast16_t(* Capture_ControlFxn) (Capture_Handle handle, uint_fast16_t cmd, void *arg)</definition>
        <argsstring>)(Capture_Handle handle, uint_fast16_t cmd, void *arg)</argsstring>
        <name>Capture_ControlFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="297" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_InitFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_InitFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="304" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a24766acbc59d43d109626e14f49cc025" prot="public" static="no">
        <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref>(*</type>
        <definition>typedef Capture_Handle(* Capture_OpenFxn) (Capture_Handle handle, Capture_Params *params)</definition>
        <argsstring>)(Capture_Handle handle, Capture_Params *params)</argsstring>
        <name>Capture_OpenFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="310" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" prot="public" static="no">
        <type>int32_t(*</type>
        <definition>typedef int32_t(* Capture_StartFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_StartFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="317" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_StopFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_StopFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="323" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a380ecaf2d95c0696e90c43090768e31b" prot="public" static="no">
        <type>struct <ref refid="struct_capture___fxn_table__" kindref="compound">Capture_FxnTable_</ref></type>
        <definition>typedef struct Capture_FxnTable_  Capture_FxnTable</definition>
        <argsstring></argsstring>
        <name>Capture_FxnTable</name>
        <briefdescription>
<para>The definition of a capture function table that contains the required set of functions to control a specific capture driver implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a3945a1b3420ba168ee166cb8e7931911" prot="public" static="no">
        <type>struct <ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref></type>
        <definition>typedef struct Capture_Config_  Capture_Config</definition>
        <argsstring></argsstring>
        <name>Capture_Config</name>
        <briefdescription>
<para>Capture Global configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The Capture_Config structure contains a set of pointers used to characterize the capture driver implementation.</para><para>This structure needs to be defined before calling <ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> and it must not be changed thereafter.</para><para><simplesect kind="see"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="371" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_close</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_close</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close a capture driver instance. The corresponding timer peripheral to Capture_handle becomes an available resource. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Capture_control</definition>
        <argsstring>(Capture_Handle handle, uint_fast16_t cmd, void *arg)</argsstring>
        <name>Capture_control</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint_fast16_t</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Function performs implementation specific features on a given Capture_Handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>A command value defined by the driver specific implementation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an optional R/W (read/write) argument that is accompanied with cmd.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Capture_Status describing an error or success state. Negative values indicate an error occurred.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="404" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_init</definition>
        <argsstring>(void)</argsstring>
        <name>Capture_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to initialize the capture driver. This function will go through all available hardware resources and mark them as &quot;available&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The Capture_config structure must exist and be persistent before this function can be called. This function must also be called before any other capture driver APIs.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
        <definition>Capture_Handle Capture_open</definition>
        <argsstring>(uint_least8_t index, Capture_Params *params)</argsstring>
        <name>Capture_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to open a given capture instance specified by the index argument. The Capture_Params specifies which mode the capture instance will operate. This function takes care of capture resource allocation. If the particular timer hardware is available to use, the capture driver acquires it and returns a Capture_Handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical instance number for the capture indexed into the Capture_config table.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a parameter block. Cannot be NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Capture_Handle on success, or NULL if the timer peripheral is already in use.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1ae8cb953d04c279876165c7697726b202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_Params_init</definition>
        <argsstring>(Capture_Params *params)</argsstring>
        <name>Capture_Params_init</name>
        <param>
          <type><ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the Capture_Params struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to Capture_Params structure for initialization.</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: callbackFxn = NULL mode = Capture_RISING_EDGE periodUnit = Capture_PERIOD_COUNTS </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Capture_start</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_start</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to start the capture instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Capture_STATUS_SUCCESS or Capture_STATUS_ERROR.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_stop</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_stop</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to stop a capture instance. If the capture instance is already stopped, this function has no effect. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="479" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Capture driver interface. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para>The capture header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Capture.h&gt;</highlight></codeline>
</programlisting></para><para><heading level="1">Overview</heading>
</para><para>The capture driver serves as the main interface for a typical RTOS application. Its purpose is to redirect the capture APIs to device specific implementations which are specified using a pointer to a <ref refid="_capture_8h_1a380ecaf2d95c0696e90c43090768e31b" kindref="member">Capture_FxnTable</ref>. The device specific implementations are responsible for creating all the RTOS specific primitives to allow for thead-safe operation. The capture driver utilizes the general purpose timer hardware.</para><para>The capture driver internally handles the general purpose timer resource allocation. For each capture driver instance, <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> occupies the specified timer, and <ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref> releases the occupied timer resource.</para><para><heading level="1">Usage</heading>
</para><para>The capture driver is used to detect and time edge triggered events on a GPIO pin. The following example code opens a capture instance in falling edge mode. The interval returned in the callback function is in microseconds.</para><para><programlisting><codeline><highlight class="normal">Capture_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">Capture_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline><highlight class="normal">params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline><highlight class="normal">params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>Capture_open(Board_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>Capture_start(handle);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(status<sp/>==<sp/>Capture_STATUS_ERROR)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//Capture_start()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">sleep(10000);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_stop(handle);</highlight></codeline>
</programlisting></para><para><heading level="3">Capture Driver Configuration</heading>
</para><para>In order to use the capture APIs, the application is required to provide device specific capture configuration in the Board.c file. The capture driver interface defines a configuration data structure:</para><para><programlisting><codeline><highlight class="normal">typedef<sp/>struct<sp/>Capture_Config_<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Capture_FxnTable<sp/>const<sp/>*fxnTablePtr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*object;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>*hwAttrs;</highlight></codeline>
<codeline><highlight class="normal">}<sp/>Capture_Config;</highlight></codeline>
</programlisting></para><para>The application must declare an array of Capture_Config elements, named Capture_config[]. Each element of Capture_config[] is populated with pointers to a device specific capture driver implementation&apos;s function table, driver object, and hardware attributes. The hardware attributes define properties such as the timer peripheral&apos;s base address, interrupt number and interrupt priority. Each element in Capture_config[] corresponds to a capture instance, and none of the elements should have NULL pointers. There is no correlation between the index and the peripheral designation.</para><para>You will need to check the device specific capture driver implementation&apos;s header file for example configuration.</para><para><heading level="3">Initializing the Capture Driver</heading>
</para><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> must be called before any other capture APIs. This function calls the device implementation&apos;s capture initialization function, for each element of Capture_config[].</para><para><heading level="3">Modes of Operation</heading>
</para><para>The capture driver supports four modes of operation which may be specified in the Capture_Params.</para><para><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad86339bd12f32a5783138536e92bf35d" kindref="member">Capture_RISING_EDGE</ref> will capture rising edge triggers. After <ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref> is called, the callback function specified in Capture_Params will be called after each rising edge is detected on the GPIO pin. This behavior will continue until <ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref> is called.</para><para><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad81d8c687bce527cf986b738dcc0bc5e" kindref="member">Capture_FALLING_EDGE</ref> will capture falling edge triggers. After <ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref> is called, the callback function specified in Capture_Params will be called after each falling edge is detected on the GPIO pin. This behavior will continue until <ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref> is called.</para><para><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805a3cda7df083b56d1e1ed54d19d1813528" kindref="member">Capture_ANY_EDGE</ref> will capture both rising and falling edge triggers. After <ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref> is called, the callback function specified in Capture_Params will be called after each rising or falling edge is detected on the GPIO pin. This behavior will continue until <ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref> is called.</para><para><heading level="1">Implementation</heading>
</para><para>The capture driver interface module is joined (at link time) to an array of Capture_Config data structures named <emphasis>Capture_config</emphasis>. Capture_config is implemented in the application with each entry being an instance of a capture peripheral. Each entry in <emphasis>Capture_config</emphasis> contains a:<itemizedlist>
<listitem><para>(Capture_FxnTable *) to a set of functions that implement a capture peripheral</para></listitem><listitem><para>(void *) data object that is associated with the Capture_FxnTable</para></listitem><listitem><para>(void *) hardware attributes that are associated with the Capture_FxnTable</para></listitem></itemizedlist>
</para><para>The capture APIs are redirected to the device specific implementations using the Capture_FxnTable pointer of the Capture_config entry. In order to use device specific functions of the capture driver directly, link in the correct driver library for your device and include the device specific capture driver header file (which in turn includes <ref refid="_capture_8h" kindref="compound">Capture.h</ref>). For example, for the MSP432 family of devices, you would include the following header file:</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/capture/CaptureMSP432.h&gt;</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016-2018,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>Capture<sp/>driver<sp/>interface</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>header<sp/>file<sp/>should<sp/>be<sp/>included<sp/>in<sp/>an<sp/>application<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/Capture.h&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>serves<sp/>as<sp/>the<sp/>main<sp/>interface<sp/>for<sp/>a<sp/>typical<sp/>RTOS</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>application.<sp/>Its<sp/>purpose<sp/>is<sp/>to<sp/>redirect<sp/>the<sp/>capture<sp/>APIs<sp/>to<sp/>device<sp/>specific</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>implementations<sp/>which<sp/>are<sp/>specified<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>#Capture_FxnTable.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>device<sp/>specific<sp/>implementations<sp/>are<sp/>responsible<sp/>for<sp/>creating<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>RTOS<sp/>specific<sp/>primitives<sp/>to<sp/>allow<sp/>for<sp/>thead-safe<sp/>operation.<sp/>The<sp/>capture</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>driver<sp/>utilizes<sp/>the<sp/>general<sp/>purpose<sp/>timer<sp/>hardware.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>internally<sp/>handles<sp/>the<sp/>general<sp/>purpose<sp/>timer<sp/>resource</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>allocation.<sp/>For<sp/>each<sp/>capture<sp/>driver<sp/>instance,<sp/>Capture_open()<sp/>occupies<sp/>the</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>specified<sp/>timer,<sp/>and<sp/>Capture_close()<sp/>releases<sp/>the<sp/>occupied<sp/>timer<sp/>resource.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Usage#</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>is<sp/>used<sp/>to<sp/>detect<sp/>and<sp/>time<sp/>edge<sp/>triggered<sp/>events<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>GPIO<sp/>pin.<sp/>The<sp/>following<sp/>example<sp/>code<sp/>opens<sp/>a<sp/>capture<sp/>instance<sp/>in<sp/>falling</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>edge<sp/>mode.<sp/>The<sp/>interval<sp/>returned<sp/>in<sp/>the<sp/>callback<sp/>function<sp/>is<sp/>in</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>microseconds.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>Capture_open(Board_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>status<sp/>=<sp/>Capture_start(handle);</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(status<sp/>==<sp/>Capture_STATUS_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//Capture_start()<sp/>failed</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>sleep(10000);</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>Capture_stop(handle);</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="86"><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Capture<sp/>Driver<sp/>Configuration<sp/>#</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>In<sp/>order<sp/>to<sp/>use<sp/>the<sp/>capture<sp/>APIs,<sp/>the<sp/>application<sp/>is<sp/>required<sp/>to<sp/>provide</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>device<sp/>specific<sp/>capture<sp/>configuration<sp/>in<sp/>the<sp/>Board.c<sp/>file.<sp/>The<sp/>capture</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>driver<sp/>interface<sp/>defines<sp/>a<sp/>configuration<sp/>data<sp/>structure:</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>typedef<sp/>struct<sp/>Capture_Config_<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Capture_FxnTable<sp/>const<sp/>*fxnTablePtr;</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*object;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>void<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>*hwAttrs;</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>}<sp/>Capture_Config;</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>application<sp/>must<sp/>declare<sp/>an<sp/>array<sp/>of<sp/>Capture_Config<sp/>elements,<sp/>named</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>Capture_config[].<sp/>Each<sp/>element<sp/>of<sp/>Capture_config[]<sp/>is<sp/>populated<sp/>with</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>pointers<sp/>to<sp/>a<sp/>device<sp/>specific<sp/>capture<sp/>driver<sp/>implementation&apos;s<sp/>function</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>table,<sp/>driver<sp/>object,<sp/>and<sp/>hardware<sp/>attributes.<sp/>The<sp/>hardware<sp/>attributes</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/>define<sp/>properties<sp/>such<sp/>as<sp/>the<sp/>timer<sp/>peripheral&apos;s<sp/>base<sp/>address,<sp/>interrupt</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>number<sp/>and<sp/>interrupt<sp/>priority.<sp/>Each<sp/>element<sp/>in<sp/>Capture_config[]<sp/>corresponds</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>a<sp/>capture<sp/>instance,<sp/>and<sp/>none<sp/>of<sp/>the<sp/>elements<sp/>should<sp/>have<sp/>NULL<sp/>pointers.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>There<sp/>is<sp/>no<sp/>correlation<sp/>between<sp/>the<sp/>index<sp/>and<sp/>the<sp/>peripheral<sp/>designation.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>will<sp/>need<sp/>to<sp/>check<sp/>the<sp/>device<sp/>specific<sp/>capture<sp/>driver<sp/>implementation&apos;s</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>header<sp/>file<sp/>for<sp/>example<sp/>configuration.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Initializing<sp/>the<sp/>Capture<sp/>Driver<sp/>#</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/>Capture_init()<sp/>must<sp/>be<sp/>called<sp/>before<sp/>any<sp/>other<sp/>capture<sp/>APIs.<sp/>This<sp/>function</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>calls<sp/>the<sp/>device<sp/>implementation&apos;s<sp/>capture<sp/>initialization<sp/>function,<sp/>for<sp/>each</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>element<sp/>of<sp/>Capture_config[].</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Modes<sp/>of<sp/>Operation<sp/>#</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>supports<sp/>four<sp/>modes<sp/>of<sp/>operation<sp/>which<sp/>may<sp/>be<sp/>specified</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>Capture_Params.</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/>#Capture_RISING_EDGE<sp/>will<sp/>capture<sp/>rising<sp/>edge<sp/>triggers.<sp/>After</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/>Capture_start()<sp/>is<sp/>called,<sp/>the<sp/>callback<sp/>function<sp/>specified<sp/>in</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/>will<sp/>be<sp/>called<sp/>after<sp/>each<sp/>rising<sp/>edge<sp/>is<sp/>detected<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>GPIO<sp/>pin.<sp/>This<sp/>behavior<sp/>will<sp/>continue<sp/>until<sp/>Capture_stop()<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/>#Capture_FALLING_EDGE<sp/>will<sp/>capture<sp/>falling<sp/>edge<sp/>triggers.<sp/>After</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/>Capture_start()<sp/>is<sp/>called,<sp/>the<sp/>callback<sp/>function<sp/>specified<sp/>in</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/>will<sp/>be<sp/>called<sp/>after<sp/>each<sp/>falling<sp/>edge<sp/>is<sp/>detected<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/>GPIO<sp/>pin.<sp/>This<sp/>behavior<sp/>will<sp/>continue<sp/>until<sp/>Capture_stop()<sp/>is<sp/>called.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/>#Capture_ANY_EDGE<sp/>will<sp/>capture<sp/>both<sp/>rising<sp/>and<sp/>falling<sp/>edge<sp/>triggers.<sp/>After</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/>Capture_start()<sp/>is<sp/>called,<sp/>the<sp/>callback<sp/>function<sp/>specified<sp/>in</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/>will<sp/>be<sp/>called<sp/>after<sp/>each<sp/>rising<sp/>or<sp/>falling<sp/>edge<sp/>is<sp/>detected</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>the<sp/>GPIO<sp/>pin.<sp/>This<sp/>behavior<sp/>will<sp/>continue<sp/>until<sp/>Capture_stop()<sp/>is</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/>called.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Implementation<sp/>#</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>interface<sp/>module<sp/>is<sp/>joined<sp/>(at<sp/>link<sp/>time)<sp/>to<sp/>an</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/>array<sp/>of<sp/>Capture_Config<sp/>data<sp/>structures<sp/>named<sp/>*Capture_config*.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/>Capture_config<sp/>is<sp/>implemented<sp/>in<sp/>the<sp/>application<sp/>with<sp/>each<sp/>entry<sp/>being<sp/>an</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/>instance<sp/>of<sp/>a<sp/>capture<sp/>peripheral.<sp/>Each<sp/>entry<sp/>in<sp/>*Capture_config*<sp/>contains<sp/>a:</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>(Capture_FxnTable<sp/>*)<sp/>to<sp/>a<sp/>set<sp/>of<sp/>functions<sp/>that<sp/>implement<sp/>a<sp/>capture</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>peripheral</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>(void<sp/>*)<sp/>data<sp/>object<sp/>that<sp/>is<sp/>associated<sp/>with<sp/>the<sp/>Capture_FxnTable</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>(void<sp/>*)<sp/>hardware<sp/>attributes<sp/>that<sp/>are<sp/>associated<sp/>with<sp/>the<sp/>Capture_FxnTable</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>APIs<sp/>are<sp/>redirected<sp/>to<sp/>the<sp/>device<sp/>specific<sp/>implementations</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>the<sp/>Capture_FxnTable<sp/>pointer<sp/>of<sp/>the<sp/>Capture_config<sp/>entry.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/>In<sp/>order<sp/>to<sp/>use<sp/>device<sp/>specific<sp/>functions<sp/>of<sp/>the<sp/>capture<sp/>driver<sp/>directly,</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/>link<sp/>in<sp/>the<sp/>correct<sp/>driver<sp/>library<sp/>for<sp/>your<sp/>device<sp/>and<sp/>include<sp/>the</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/>device<sp/>specific<sp/>capture<sp/>driver<sp/>header<sp/>file<sp/>(which<sp/>in<sp/>turn<sp/>includes</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/><sp/>Capture.h).<sp/>For<sp/>example,<sp/>for<sp/>the<sp/>MSP432<sp/>family<sp/>of<sp/>devices,<sp/>you<sp/>would</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/>include<sp/>the<sp/>following<sp/>header<sp/>file:</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/capture/CaptureMSP432.h&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_Capture__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_Capture__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="_capture_8h_1afcb908fe248e5aa0f0f83d6b0dac392a" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_CMD_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="_capture_8h_1a38272a451aa6ff7ea39a9e0eb2574df8" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="_capture_8h_1a18b1cc41db33b8504db3d1378265c187" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_UNDEFINEDCMD<sp/><sp/><sp/><sp/>(-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref><sp/>*<ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805" kindref="member">Capture_Mode_</ref><sp/>{</highlight></codeline>
<codeline lineno="234" refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad86339bd12f32a5783138536e92bf35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad86339bd12f32a5783138536e92bf35d" kindref="member">Capture_RISING_EDGE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235" refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad81d8c687bce527cf986b738dcc0bc5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805ad81d8c687bce527cf986b738dcc0bc5e" kindref="member">Capture_FALLING_EDGE</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236" refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805a3cda7df083b56d1e1ed54d19d1813528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6143f2fd448c7dd22004fa5087568805a3cda7df083b56d1e1ed54d19d1813528" kindref="member">Capture_ANY_EDGE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}<sp/><ref refid="_capture_8h_1aa908047f2a1c31fc994716cd34f556f6" kindref="member">Capture_Mode</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957" kindref="member">Capture_PeriodUnits_</ref><sp/>{</highlight></codeline>
<codeline lineno="247" refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a93407c4aa7ee40cfe498082b7cf2f246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a93407c4aa7ee40cfe498082b7cf2f246" kindref="member">Capture_PERIOD_US</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248" refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a7a720a1bd6f1c959c00717481cfa3272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a7a720a1bd6f1c959c00717481cfa3272" kindref="member">Capture_PERIOD_HZ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250" refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a3803ec2ba167766ee6a4b06f4a21d86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a4fbb5218a527a7b1c2cd77ea90733957a3803ec2ba167766ee6a4b06f4a21d86c" kindref="member">Capture_PERIOD_COUNTS</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a0179a1a6aa007381d609f7aba58a042f" kindref="member">Capture_PeriodUnits</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="_capture_8h_1a1c76952161fb6646781648835c250626" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1a1c76952161fb6646781648835c250626" kindref="member">Capture_CallBackFxn</ref>)(Capture_Handle<sp/>handle,<sp/>uint32_t<sp/>interval);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="struct_capture___params__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___params__" kindref="compound">Capture_Params_</ref><sp/>{</highlight></codeline>
<codeline lineno="278" refid="struct_capture___params___1af0db951d7e1088c992f0e6b9254db9ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Capture_Mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_capture___params___1af0db951d7e1088c992f0e6b9254db9ac" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="struct_capture___params___1aa27fca5ca034f44e9040b72728ec3286" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a1c76952161fb6646781648835c250626" kindref="member">Capture_CallBackFxn</ref><sp/><sp/><sp/><sp/><ref refid="struct_capture___params___1aa27fca5ca034f44e9040b72728ec3286" kindref="member">callbackFxn</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="struct_capture___params___1a276edff89f7e5c4af4a7836ba59e24d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Capture_PeriodUnits<sp/><sp/><sp/><sp/><ref refid="struct_capture___params___1a276edff89f7e5c4af4a7836ba59e24d5" kindref="member">periodUnit</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a0389b11cecfacc40c0d5eba7dc182973" kindref="member">Capture_Params</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" kindref="member">Capture_CloseFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_fast16_t<sp/>(*<ref refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" kindref="member">Capture_ControlFxn</ref>)(Capture_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast16_t<sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" kindref="member">Capture_InitFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref><sp/>(*<ref refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" kindref="member">Capture_OpenFxn</ref>)(Capture_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_capture___params__" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>(*<ref refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" kindref="member">Capture_StartFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" kindref="member">Capture_StopFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="struct_capture___fxn_table__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___fxn_table__" kindref="compound">Capture_FxnTable_</ref><sp/>{</highlight></codeline>
<codeline lineno="332" refid="struct_capture___fxn_table___1ad1aff1b539b0c2b30772a529845b7b66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" kindref="member">Capture_CloseFxn</ref><sp/><ref refid="struct_capture___fxn_table___1ad1aff1b539b0c2b30772a529845b7b66" kindref="member">closeFxn</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="struct_capture___fxn_table___1ad2b38918abb070f9bc6ed9cbaa0b5f44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" kindref="member">Capture_ControlFxn</ref><sp/><ref refid="struct_capture___fxn_table___1ad2b38918abb070f9bc6ed9cbaa0b5f44" kindref="member">controlFxn</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="struct_capture___fxn_table___1a5a863e2b8c9153928da85b70412f7e82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" kindref="member">Capture_InitFxn</ref><sp/><ref refid="struct_capture___fxn_table___1a5a863e2b8c9153928da85b70412f7e82" kindref="member">initFxn</ref>;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="struct_capture___fxn_table___1ace14ba31400a60a3514d6d3206eacf70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" kindref="member">Capture_OpenFxn</ref><sp/><ref refid="struct_capture___fxn_table___1ace14ba31400a60a3514d6d3206eacf70" kindref="member">openFxn</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="struct_capture___fxn_table___1a66cf483dfeca594cc182b58881d09c3f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" kindref="member">Capture_StartFxn</ref><sp/><ref refid="struct_capture___fxn_table___1a66cf483dfeca594cc182b58881d09c3f" kindref="member">startFxn</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="struct_capture___fxn_table___1a78fdc1e1b9278172dd284dd856bc2d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" kindref="member">Capture_StopFxn</ref><sp/><ref refid="struct_capture___fxn_table___1a78fdc1e1b9278172dd284dd856bc2d51" kindref="member">stopFxn</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a380ecaf2d95c0696e90c43090768e31b" kindref="member">Capture_FxnTable</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="struct_capture___config__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref><sp/>{</highlight></codeline>
<codeline lineno="364" refid="struct_capture___config___1ab70ae8cc52fd4bcaaa63e8b849645e2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_capture___fxn_table__" kindref="compound">Capture_FxnTable</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_capture___config___1ab70ae8cc52fd4bcaaa63e8b849645e2d" kindref="member">fxnTablePtr</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="struct_capture___config___1a317acc4e42e86b9a1396ef3554239720" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_capture___config___1a317acc4e42e86b9a1396ef3554239720" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="struct_capture___config___1a340cb3dd3080c190189a50315a30f357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_capture___config___1a340cb3dd3080c190189a50315a30f357" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a3945a1b3420ba168ee166cb8e7931911" kindref="member">Capture_Config</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control</ref>(Capture_Handle<sp/>handle,<sp/>uint_fast16_t<sp/>cmd,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Capture_Handle<sp/><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open</ref>(uint_least8_t<sp/>index,<sp/><ref refid="struct_capture___params__" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1ae8cb953d04c279876165c7697726b202" kindref="member">Capture_Params_init</ref>(<ref refid="struct_capture___params__" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>are<sp/>included<sp/>for<sp/>backwards<sp/>compatibility.<sp/>These<sp/>should<sp/>not<sp/>be</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>used<sp/>by<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="_capture_8h_1af78f6730554b371139cc77ed73348a14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_CMD_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_CMD_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="_capture_8h_1a402831b159da8388077d6a72f1abaec3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_STATUS_RESERVED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="_capture_8h_1a8fc4681430c2c76005b8aa2807f9d921" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_STATUS_SUCCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="_capture_8h_1a3781c43a72b84b51b97a472cc1946247" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_STATUS_ERROR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488" refid="_capture_8h_1a51bab6d8023b8df59305f1c9e841cc93" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_STATUS_UNDEFINEDCMD<sp/><sp/><sp/><sp/>Capture_STATUS_UNDEFINEDCMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="_capture_8h_1ae5fb63d1a30a174c3b638702ba0db5ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_MODE_RISING_RISING<sp/><sp/><sp/><sp/><sp/>Capture_RISING_EDGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="_capture_8h_1a65280eb6ee633f663af1f2efd5dcf365" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_MODE_FALLING_FALLING<sp/><sp/><sp/>Capture_FALLING_EDGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="_capture_8h_1a76a7cecaf1d3577ce2599ca2d4b81255" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_MODE_ANY_EDGE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_ANY_EDGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="_capture_8h_1a68d9d33ac6f96a390af7e6ce26dadd6f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_PERIOD_US<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_PERIOD_US</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="_capture_8h_1a9eee4caf7f6a26b71deb276f58a466d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_PERIOD_HZ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_PERIOD_HZ</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="_capture_8h_1a4d48ebee4fb03483645fb0e081a19e08" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAPTURE_PERIOD_COUNTS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_PERIOD_COUNTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="_capture_8h_1a329b427d7215e176591a8dd21c1c70ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Capture_Period_Unit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture_PeriodUnits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_Capture__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h"/>
  </compounddef>
</doxygen>
