<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_capture_8h" kind="file" language="C++">
    <compoundname>Capture.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includedby refid="_capture_m_s_p432_8h" local="no">CaptureMSP432.h</includedby>
    <incdepgraph>
      <node id="44">
        <label>stdint.h</label>
      </node>
      <node id="43">
        <label>Capture.h</label>
        <link refid="_capture_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="45">
        <label>Capture.h</label>
        <link refid="_capture_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>CaptureMSP432.h</label>
        <link refid="_capture_m_s_p432_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_capture___params" prot="public">Capture_Params</innerclass>
    <innerclass refid="struct_capture___fxn_table" prot="public">Capture_FxnTable</innerclass>
    <innerclass refid="struct_capture___config__" prot="public">Capture_Config_</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_capture_8h_1afcb908fe248e5aa0f0f83d6b0dac392a" prot="public" static="no">
        <name>Capture_CMD_RESERVED</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Capture_control command code reservation offset. Capture driver implementations should offset command codes with Capture_CMD_RESERVED growing positively.</para><para>Example implementation specific command codes: <programlisting><codeline><highlight class="normal">#define<sp/>CaptureXYZ_CMD_COMMAND0<sp/><sp/><sp/><sp/><sp/><sp/>Capture_CMD_RESERVED<sp/>+<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CaptureXYZ_CMD_COMMAND1<sp/><sp/><sp/><sp/><sp/><sp/>Capture_CMD_RESERVED<sp/>+<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="153" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a38272a451aa6ff7ea39a9e0eb2574df8" prot="public" static="no">
        <name>Capture_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Capture_control status code reservation offset. Capture driver implementations should offset status codes with Capture_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>CaptureXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/><sp/>Capture_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CaptureXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/><sp/>Capture_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="166" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" prot="public" static="no">
        <name>Capture_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="171" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" prot="public" static="no">
        <name>Capture_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="176" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_capture_8h_1a18b1cc41db33b8504db3d1378265c187" prot="public" static="no">
        <name>Capture_STATUS_UNDEFINEDCMD</name>
        <initializer>(-2)</initializer>
        <briefdescription>
<para>An error status code returned by <ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref> for undefined command codes. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref> returns Capture_STATUS_UNDEFINEDCMD if the control code is not recognized by the driver implementation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="185" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231" prot="public" static="no">
        <name>Capture_Mode</name>
        <enumvalue id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad86339bd12f32a5783138536e92bf35d" prot="public">
          <name>Capture_RISING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on rising edges. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad81d8c687bce527cf986b738dcc0bc5e" prot="public">
          <name>Capture_FALLING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on falling edges. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a3cda7df083b56d1e1ed54d19d1813528" prot="public">
          <name>Capture_ANY_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Capture is triggered on both rising and falling edges. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a392ecf3f1f531cd115aa0ac9b6cb8f81" prot="public">
          <name>Capture_RISING_EDGE_FALLING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start capture is triggered on rising edge and stop capture is triggered on falling edge </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231aeb947d640b86ef0b36965910e4bd5750" prot="public">
          <name>Capture_FALLING_EDGE_RISING_EDGE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Start capture is triggered on falling edge and stop capture is triggered on rising edge </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture mode settings. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the capture modes that may be specified in <ref refid="struct_capture___params" kindref="compound">Capture_Params</ref>.</para><para>Some modes are not available on all devices. Check the device specific implementations to see which modes are allowed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="202" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="202" bodyend="213"/>
      </memberdef>
      <memberdef kind="enum" id="_capture_8h_1aaca480a01a184f77deba46e78fd61037" prot="public" static="no">
        <name>Capture_PeriodUnits</name>
        <enumvalue id="_capture_8h_1aaca480a01a184f77deba46e78fd61037a93407c4aa7ee40cfe498082b7cf2f246" prot="public">
          <name>Capture_PERIOD_US</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in micro seconds. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1aaca480a01a184f77deba46e78fd61037a7a720a1bd6f1c959c00717481cfa3272" prot="public">
          <name>Capture_PERIOD_HZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in hertz; interrupts per second. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1aaca480a01a184f77deba46e78fd61037a3803ec2ba167766ee6a4b06f4a21d86c" prot="public">
          <name>Capture_PERIOD_COUNTS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in timer ticks. Varies by board. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_capture_8h_1aaca480a01a184f77deba46e78fd61037a0ad1bae5f1498c86c2550f4c8e80fd69" prot="public">
          <name>Capture_PERIOD_NS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Period specified in nano seconds. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Capture period unit enum. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the units that may be specified for the period in <ref refid="struct_capture___params" kindref="compound">Capture_Params</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="221" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="221" bodyend="228"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" prot="public" static="no">
        <type>struct <ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref> *</type>
        <definition>typedef struct Capture_Config_* Capture_Handle</definition>
        <argsstring></argsstring>
        <name>Capture_Handle</name>
        <briefdescription>
<para>A handle that is returned from a <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="190" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a1c76952161fb6646781648835c250626" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_CallBackFxn) (Capture_Handle handle, uint32_t interval)</definition>
        <argsstring>)(Capture_Handle handle, uint32_t interval)</argsstring>
        <name>Capture_CallBackFxn</name>
        <briefdescription>
<para>Capture callback function. </para>        </briefdescription>
        <detaileddescription>
<para>User definable callback function prototype. The capture driver will call the defined function and pass in the capture driver&apos;s handle and the pointer to the user-specified the argument.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Capture_Handle</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">interval</parametername>
</parameternamelist>
<parameterdescription>
<para>Interval of two triggering edges in <ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037" kindref="member">Capture_PeriodUnits</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="243" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1ac94758009fcf136975142fae5a76908d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_CloseFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_CloseFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="267" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" prot="public" static="no">
        <type>int_fast16_t(*</type>
        <definition>typedef int_fast16_t(* Capture_ControlFxn) (Capture_Handle handle, uint_fast16_t cmd, void *arg)</definition>
        <argsstring>)(Capture_Handle handle, uint_fast16_t cmd, void *arg)</argsstring>
        <name>Capture_ControlFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="273" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_InitFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_InitFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="280" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a24766acbc59d43d109626e14f49cc025" prot="public" static="no">
        <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref>(*</type>
        <definition>typedef Capture_Handle(* Capture_OpenFxn) (Capture_Handle handle, Capture_Params *params)</definition>
        <argsstring>)(Capture_Handle handle, Capture_Params *params)</argsstring>
        <name>Capture_OpenFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="286" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" prot="public" static="no">
        <type>int32_t(*</type>
        <definition>typedef int32_t(* Capture_StartFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_StartFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="293" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Capture_StopFxn) (Capture_Handle handle)</definition>
        <argsstring>)(Capture_Handle handle)</argsstring>
        <name>Capture_StopFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="299" column="1" bodyfile="exports/tidrivers_msp432/source/ti/drivers/Capture.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_capture_8h_1a3945a1b3420ba168ee166cb8e7931911" prot="public" static="no">
        <type>struct <ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref></type>
        <definition>typedef struct Capture_Config_  Capture_Config</definition>
        <argsstring></argsstring>
        <name>Capture_Config</name>
        <briefdescription>
<para>Capture Global configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The Capture_Config structure contains a set of pointers used to characterize the capture driver implementation.</para><para>This structure needs to be defined before calling <ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> and it must not be changed thereafter.</para><para><simplesect kind="see"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="347" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_close</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_close</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close a capture driver instance. The corresponding timer peripheral to Capture_handle becomes an available resource. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Capture_control</definition>
        <argsstring>(Capture_Handle handle, uint_fast16_t cmd, void *arg)</argsstring>
        <name>Capture_control</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint_fast16_t</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Function performs implementation specific features on a given Capture_Handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>A command value defined by the driver specific implementation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">arg</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an optional R/W (read/write) argument that is accompanied with cmd.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" kindref="member">Capture_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The control call was successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" kindref="member">Capture_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The control call failed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_init</definition>
        <argsstring>(void)</argsstring>
        <name>Capture_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to initialize the capture driver. This function will go through all available hardware resources and mark them as &quot;available&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The Capture_config structure must exist and be persistent before this function can be called. This function must also be called before any other capture driver APIs.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="394" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
        <definition>Capture_Handle Capture_open</definition>
        <argsstring>(uint_least8_t index, Capture_Params *params)</argsstring>
        <name>Capture_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="struct_capture___params" kindref="compound">Capture_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to open a given capture instance specified by the index argument. The <ref refid="struct_capture___params" kindref="compound">Capture_Params</ref> specifies which mode the capture instance will operate. This function takes care of capture resource allocation. If the particular timer hardware is available to use, the capture driver acquires it and returns a Capture_Handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical instance number for the capture indexed into the Capture_config table.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a parameter block. Cannot be NULL.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref> on success, or NULL if the timer peripheral is already in use.</para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1ae8cb953d04c279876165c7697726b202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_Params_init</definition>
        <argsstring>(Capture_Params *params)</argsstring>
        <name>Capture_Params_init</name>
        <param>
          <type><ref refid="struct_capture___params" kindref="compound">Capture_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_capture___params" kindref="compound">Capture_Params</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to <ref refid="struct_capture___params" kindref="compound">Capture_Params</ref> structure for initialization.</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: callbackFxn = NULL mode = <ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad86339bd12f32a5783138536e92bf35d" kindref="member">Capture_RISING_EDGE</ref> periodUnit = <ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a3803ec2ba167766ee6a4b06f4a21d86c" kindref="member">Capture_PERIOD_COUNTS</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Capture_start</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_start</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to start the capture instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" kindref="member">Capture_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The start call was successful. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" kindref="member">Capture_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The start call failed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Capture_stop</definition>
        <argsstring>(Capture_Handle handle)</argsstring>
        <name>Capture_stop</name>
        <param>
          <type><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to stop a capture instance. If the capture instance is already stopped, this function has no effect. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Capture_Handle returned from <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h" line="456" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Capture Driver. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><anchor id="_capture_8h_1ti_drivers_Capture_Overview"/><heading level="1">Overview</heading>
</para><para>The capture driver is used to detect and time edge triggered events on a GPIO pin.</para><para>The capture driver serves as the main interface for a typical RTOS application. Its purpose is to redirect the capture APIs to device specific implementations which are specified using a pointer to a <ref refid="struct_capture___fxn_table" kindref="compound">Capture_FxnTable</ref>. The device specific implementations are responsible for creating all the RTOS specific primitives to allow for thead-safe operation. The capture driver utilizes the general purpose timer hardware.</para><para>The capture driver internally handles the general purpose timer resource allocation. For each capture driver instance, <ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open()</ref> occupies the specified timer, and <ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close()</ref> releases the occupied timer resource.</para><para><hruler/>
 <anchor id="_capture_8h_1ti_drivers_Capture_Usage"/><heading level="1">Usage</heading>
</para><para>This documentation provides a basic <ref refid="_capture_8h_1ti_drivers_Capture_Synopsis" kindref="member">usage summary</ref> and a set of <ref refid="_capture_8h_1ti_drivers_Capture_Examples" kindref="member">examples</ref> in the form of commented code fragments. Detailed descriptions of the APIs are provided in subsequent sections.</para><para><anchor id="_capture_8h_1ti_drivers_Capture_Synopsis"/><heading level="2">Synopsis</heading>
</para><para><anchor id="_capture_8h_1ti_drivers_Capture_Synopsis_Code"/><programlisting><codeline><highlight class="normal">//<sp/>Import<sp/>Capture<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Capture.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">Capture_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline><highlight class="normal">params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline><highlight class="normal">params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>Capture_open(CONFIG_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>Capture_start(handle);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(status<sp/>==<sp/>Capture_STATUS_ERROR)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//Capture_start()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">sleep(10000);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_stop(handle);</highlight></codeline>
</programlisting></para><para><hruler/>
 <anchor id="_capture_8h_1ti_drivers_Capture_Examples"/><heading level="1">Examples</heading>
</para><para><itemizedlist>
<listitem><para><ref refid="_capture_8h_1ti_drivers_Capture_Examples_open" kindref="member">Opening a Capture instance</ref></para></listitem>
</itemizedlist>
<anchor id="_capture_8h_1ti_drivers_Capture_Examples_open"/><heading level="2">Opening a Capture instance</heading>
</para><para><programlisting><codeline><highlight class="normal">Capture_Handle<sp/><sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">Capture_Params<sp/><sp/>params;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Capture_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline><highlight class="normal">params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline><highlight class="normal">params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>Capture_open(CONFIG_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><hruler/>
 <anchor id="_capture_8h_1ti_drivers_Capture_Configuration"/><heading level="1">Configuration</heading>
</para><para>Refer to the <ref refid="index_1driver_configuration" kindref="member">Driver&apos;s Configuration</ref> section for driver configuration information. <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>Capture<sp/>Driver</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Overview</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>is<sp/>used<sp/>to<sp/>detect<sp/>and<sp/>time<sp/>edge<sp/>triggered<sp/>events<sp/>on<sp/>a</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>GPIO<sp/>pin.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>serves<sp/>as<sp/>the<sp/>main<sp/>interface<sp/>for<sp/>a<sp/>typical<sp/>RTOS</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>application.<sp/>Its<sp/>purpose<sp/>is<sp/>to<sp/>redirect<sp/>the<sp/>capture<sp/>APIs<sp/>to<sp/>device<sp/>specific</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>implementations<sp/>which<sp/>are<sp/>specified<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>#Capture_FxnTable.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>device<sp/>specific<sp/>implementations<sp/>are<sp/>responsible<sp/>for<sp/>creating<sp/>all<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>RTOS<sp/>specific<sp/>primitives<sp/>to<sp/>allow<sp/>for<sp/>thead-safe<sp/>operation.<sp/>The<sp/>capture</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>driver<sp/>utilizes<sp/>the<sp/>general<sp/>purpose<sp/>timer<sp/>hardware.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>capture<sp/>driver<sp/>internally<sp/>handles<sp/>the<sp/>general<sp/>purpose<sp/>timer<sp/>resource</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>allocation.<sp/>For<sp/>each<sp/>capture<sp/>driver<sp/>instance,<sp/>Capture_open()<sp/>occupies<sp/>the</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>specified<sp/>timer,<sp/>and<sp/>Capture_close()<sp/>releases<sp/>the<sp/>occupied<sp/>timer<sp/>resource.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Usage</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Usage</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>documentation<sp/>provides<sp/>a<sp/>basic<sp/>@ref<sp/>ti_drivers_Capture_Synopsis</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>&quot;usage<sp/>summary&quot;<sp/>and<sp/>a<sp/>set<sp/>of<sp/>@ref<sp/>ti_drivers_Capture_Examples<sp/>&quot;examples&quot;</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>form<sp/>of<sp/>commented<sp/>code<sp/>fragments.<sp/>Detailed<sp/>descriptions<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>APIs<sp/>are<sp/>provided<sp/>in<sp/>subsequent<sp/>sections.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Synopsis</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Synopsis</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Synopsis_Code</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>Import<sp/>Capture<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/Capture.h&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/>params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>Capture_open(CONFIG_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>status<sp/>=<sp/>Capture_start(handle);</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(status<sp/>==<sp/>Capture_STATUS_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//Capture_start()<sp/>failed</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>sleep(10000);</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>Capture_stop(handle);</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Examples</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Examples</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>@li<sp/>@ref<sp/>ti_drivers_Capture_Examples_open<sp/>&quot;Opening<sp/>a<sp/>Capture<sp/>instance&quot;</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Examples_open</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Opening<sp/>a<sp/>Capture<sp/>instance</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Handle<sp/><sp/>handle;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params<sp/><sp/>params;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/>Capture_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>params.mode<sp/><sp/>=<sp/>Capture_FALLING_EDGE;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>params.callbackFxn<sp/>=<sp/>someCaptureCallbackFunction;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/>params.periodUnit<sp/>=<sp/>Capture_PERIOD_US;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>Capture_open(CONFIG_CAPTURE0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//Capture_open()<sp/>failed</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Capture_Configuration</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Configuration</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>Refer<sp/>to<sp/>the<sp/>@ref<sp/>driver_configuration<sp/>&quot;Driver&apos;s<sp/>Configuration&quot;<sp/>section</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>driver<sp/>configuration<sp/>information.</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_Capture__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_Capture__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="_capture_8h_1afcb908fe248e5aa0f0f83d6b0dac392a" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_CMD_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="_capture_8h_1a38272a451aa6ff7ea39a9e0eb2574df8" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="_capture_8h_1abf666e626bf27880f104fc4e8489a4a3" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="_capture_8h_1a438bf703ea8eea15d39ef8cd6e94322a" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="_capture_8h_1a18b1cc41db33b8504db3d1378265c187" refkind="member"><highlight class="preprocessor">#define<sp/>Capture_STATUS_UNDEFINEDCMD<sp/><sp/><sp/><sp/>(-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref><sp/>*<ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="203" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad86339bd12f32a5783138536e92bf35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad86339bd12f32a5783138536e92bf35d" kindref="member">Capture_RISING_EDGE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad81d8c687bce527cf986b738dcc0bc5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231ad81d8c687bce527cf986b738dcc0bc5e" kindref="member">Capture_FALLING_EDGE</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a3cda7df083b56d1e1ed54d19d1813528" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a3cda7df083b56d1e1ed54d19d1813528" kindref="member">Capture_ANY_EDGE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a392ecf3f1f531cd115aa0ac9b6cb8f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231a392ecf3f1f531cd115aa0ac9b6cb8f81" kindref="member">Capture_RISING_EDGE_FALLING_EDGE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="210" refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231aeb947d640b86ef0b36965910e4bd5750" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231aeb947d640b86ef0b36965910e4bd5750" kindref="member">Capture_FALLING_EDGE_RISING_EDGE</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a6382e7d47f7d4551ff15a421e79da231" kindref="member">Capture_Mode</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222" refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a93407c4aa7ee40cfe498082b7cf2f246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a93407c4aa7ee40cfe498082b7cf2f246" kindref="member">Capture_PERIOD_US</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223" refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a7a720a1bd6f1c959c00717481cfa3272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a7a720a1bd6f1c959c00717481cfa3272" kindref="member">Capture_PERIOD_HZ</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a3803ec2ba167766ee6a4b06f4a21d86c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a3803ec2ba167766ee6a4b06f4a21d86c" kindref="member">Capture_PERIOD_COUNTS</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227" refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a0ad1bae5f1498c86c2550f4c8e80fd69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037a0ad1bae5f1498c86c2550f4c8e80fd69" kindref="member">Capture_PERIOD_NS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal">}<sp/><ref refid="_capture_8h_1aaca480a01a184f77deba46e78fd61037" kindref="member">Capture_PeriodUnits</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="_capture_8h_1a1c76952161fb6646781648835c250626" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1a1c76952161fb6646781648835c250626" kindref="member">Capture_CallBackFxn</ref>)(Capture_Handle<sp/>handle,<sp/>uint32_t<sp/>interval);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="struct_capture___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254" refid="struct_capture___params_1a727621a60ba029f6311f2ff72c98e285" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Capture_Mode<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_capture___params_1a727621a60ba029f6311f2ff72c98e285" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="struct_capture___params_1ac56b9fb245bae692f5b5442abccc24a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a1c76952161fb6646781648835c250626" kindref="member">Capture_CallBackFxn</ref><sp/><sp/><sp/><sp/><ref refid="struct_capture___params_1ac56b9fb245bae692f5b5442abccc24a3" kindref="member">callbackFxn</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="struct_capture___params_1acc5f4ead58706dd7248bb8daf0e02a66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Capture_PeriodUnits<sp/><sp/><sp/><sp/><ref refid="struct_capture___params_1acc5f4ead58706dd7248bb8daf0e02a66" kindref="member">periodUnit</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><ref refid="struct_capture___params" kindref="compound">Capture_Params</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" kindref="member">Capture_CloseFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_fast16_t<sp/>(*<ref refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" kindref="member">Capture_ControlFxn</ref>)(Capture_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>uint_fast16_t<sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" kindref="member">Capture_InitFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a74b1322bfaa6efa86bb1f1f43b2ed714" kindref="member">Capture_Handle</ref><sp/>(*<ref refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" kindref="member">Capture_OpenFxn</ref>)(Capture_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_capture___params" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/>(*<ref refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" kindref="member">Capture_StartFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" kindref="member">Capture_StopFxn</ref>)(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="struct_capture___fxn_table" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308" refid="struct_capture___fxn_table_1aa211ebfde18e18e9c8d8dc28f0cbeb58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1ac94758009fcf136975142fae5a76908d" kindref="member">Capture_CloseFxn</ref><sp/><ref refid="struct_capture___fxn_table_1aa211ebfde18e18e9c8d8dc28f0cbeb58" kindref="member">closeFxn</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="struct_capture___fxn_table_1a53426d2eabd2c36741023b25c590b044" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1ac8581aab4251b0b86e5f1bbea29773cd" kindref="member">Capture_ControlFxn</ref><sp/><ref refid="struct_capture___fxn_table_1a53426d2eabd2c36741023b25c590b044" kindref="member">controlFxn</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="struct_capture___fxn_table_1a06543203cd1940ed0fc5cfd8414c4b34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a10fd2424672b0307aa92d4ab205f8e70" kindref="member">Capture_InitFxn</ref><sp/><ref refid="struct_capture___fxn_table_1a06543203cd1940ed0fc5cfd8414c4b34" kindref="member">initFxn</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="struct_capture___fxn_table_1a060a80e93b307e574309a5e03615c8e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a24766acbc59d43d109626e14f49cc025" kindref="member">Capture_OpenFxn</ref><sp/><ref refid="struct_capture___fxn_table_1a060a80e93b307e574309a5e03615c8e9" kindref="member">openFxn</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="struct_capture___fxn_table_1ade10463970bb19bfa1b45a1ae248e703" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1a4770aa835a24e73223f22952fad0ce6b" kindref="member">Capture_StartFxn</ref><sp/><ref refid="struct_capture___fxn_table_1ade10463970bb19bfa1b45a1ae248e703" kindref="member">startFxn</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="struct_capture___fxn_table_1a565fce5ab6bee7adc07d26d2ec698cfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_capture_8h_1af24f67ee7aa30b79ab1745e79fe793d3" kindref="member">Capture_StopFxn</ref><sp/><ref refid="struct_capture___fxn_table_1a565fce5ab6bee7adc07d26d2ec698cfb" kindref="member">stopFxn</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}<sp/><ref refid="struct_capture___fxn_table" kindref="compound">Capture_FxnTable</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="struct_capture___config__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_capture___config__" kindref="compound">Capture_Config_</ref><sp/>{</highlight></codeline>
<codeline lineno="340" refid="struct_capture___config___1ab70ae8cc52fd4bcaaa63e8b849645e2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_capture___fxn_table" kindref="compound">Capture_FxnTable</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_capture___config___1ab70ae8cc52fd4bcaaa63e8b849645e2d" kindref="member">fxnTablePtr</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="struct_capture___config___1a317acc4e42e86b9a1396ef3554239720" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_capture___config___1a317acc4e42e86b9a1396ef3554239720" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="struct_capture___config___1a340cb3dd3080c190189a50315a30f357" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_capture___config___1a340cb3dd3080c190189a50315a30f357" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}<sp/><ref refid="_capture_8h_1a3945a1b3420ba168ee166cb8e7931911" kindref="member">Capture_Config</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a1e5d3de290f67a950f52571e6cff185f" kindref="member">Capture_close</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_capture_8h_1a87e62f4b1cc1800afecf54b74fd58e63" kindref="member">Capture_control</ref>(Capture_Handle<sp/>handle,<sp/>uint_fast16_t<sp/>cmd,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1ae892a54311895e6cc4640276ed1bfb1d" kindref="member">Capture_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Capture_Handle<sp/><ref refid="_capture_8h_1af627bf1b9d94ec29bea351e7d4cc9c34" kindref="member">Capture_open</ref>(uint_least8_t<sp/>index,<sp/><ref refid="struct_capture___params" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1ae8cb953d04c279876165c7697726b202" kindref="member">Capture_Params_init</ref>(<ref refid="struct_capture___params" kindref="compound">Capture_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="_capture_8h_1aedfad453a8fc2f449c3680b397421e9a" kindref="member">Capture_start</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_capture_8h_1a82c4e453c52c4ecb7e4f87544e0e1460" kindref="member">Capture_stop</ref>(Capture_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_Capture__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/source/ti/drivers/Capture.h"/>
  </compounddef>
</doxygen>
