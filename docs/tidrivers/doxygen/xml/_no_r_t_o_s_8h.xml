<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_no_r_t_o_s_8h" kind="file" language="C++">
    <compoundname>NoRTOS.h</compoundname>
    <innerclass refid="struct___no_r_t_o_s___config" prot="public">_NoRTOS_Config</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_no_r_t_o_s_8h_1a28dea0ee567d35cc2ee31fa62b8a2a8a" prot="public" static="no">
        <type>struct <ref refid="struct___no_r_t_o_s___config" kindref="compound">_NoRTOS_Config</ref></type>
        <definition>typedef struct _NoRTOS_Config  NoRTOS_Config</definition>
        <argsstring></argsstring>
        <name>NoRTOS_Config</name>
        <briefdescription>
<para>NoRTOS framework global configuration. </para>        </briefdescription>
        <detaileddescription>
<para>The NoRTOS_Config structure contains a set of values utilized by the NoRTOS framework.</para><para>The <ref refid="_no_r_t_o_s_8h_1a5beb1c723f408204ffa9251f778b9da6" kindref="member">NoRTOS_getConfig()</ref> API can be used to retrieve the current settings. When changing one or more of these settings, a NoRTOS_Config structure should first be populated with the current settings by calling <ref refid="_no_r_t_o_s_8h_1a5beb1c723f408204ffa9251f778b9da6" kindref="member">NoRTOS_getConfig()</ref>, after which the particular setting(s) that needs to be changed should be set and given to the NoRTOS framework by calling <ref refid="_no_r_t_o_s_8h_1ada45395ac2516b5d94fe4260e79def62" kindref="member">NoRTOS_setConfig()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/kernel/nortos/NoRTOS.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_no_r_t_o_s_8h_1a5beb1c723f408204ffa9251f778b9da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NoRTOS_getConfig</definition>
        <argsstring>(NoRTOS_Config *cfg)</argsstring>
        <name>NoRTOS_getConfig</name>
        <param>
          <type><ref refid="_no_r_t_o_s_8h_1a28dea0ee567d35cc2ee31fa62b8a2a8a" kindref="member">NoRTOS_Config</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Function to retrieve current NoRTOS configuration values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a NoRTOS_Config structure in which to store the current configuration values </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/kernel/nortos/NoRTOS.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_no_r_t_o_s_8h_1ada45395ac2516b5d94fe4260e79def62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NoRTOS_setConfig</definition>
        <argsstring>(NoRTOS_Config *cfg)</argsstring>
        <name>NoRTOS_setConfig</name>
        <param>
          <type><ref refid="_no_r_t_o_s_8h_1a28dea0ee567d35cc2ee31fa62b8a2a8a" kindref="member">NoRTOS_Config</ref> *</type>
          <declname>cfg</declname>
        </param>
        <briefdescription>
<para>Function to set or modify NoRTOS configuration values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cfg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a NoRTOS_Config structure from which NoRTOS configuration values are set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/kernel/nortos/NoRTOS.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_no_r_t_o_s_8h_1a71a949aa77a36c1fbb73b482545d0b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NoRTOS_start</definition>
        <argsstring>()</argsstring>
        <name>NoRTOS_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/kernel/nortos/NoRTOS.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>NoRTOS framework module. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para>The NoRTOS header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;NoRTOS.h&gt;</highlight></codeline>
</programlisting></para><para><heading level="1">Overview</heading>
</para><para>The NoRTOS framework module controls various aspects of the application&apos;s behavior with respect to the TI Driver interfaces that are used by the application.</para><para>Some TI Drivers make use of an internal Clock module that offers timing services to the drivers, based on a Clock &quot;tick&quot; which operates at a frequency based on a configured period. This period can be configured per application requirements through the NoRTOS module, although the default setting might be required by certain TI Drivers that assume a certain Clock tick frequency.</para><para>Some TI Drivers make use of an internal Swi (Software interrupt) module that offers a scheduling paradigm that lies between an application&apos;s &apos;main&apos; thread and hardware interrupts. The internal Swi implementation utilizes a software-triggered-only hardware interrupt for achieving this mid-level scheduling paradigm. This hardware interrupt can be configured per application requirements through the NoRTOS module, although the default setting is likely what should be used.</para><para>Some TI Drivers will &quot;suspend&quot; the application&apos;s operation until a certain event occurs. When an application is running in the NoRTOS framework there are no other &quot;threads&quot; to run when the &apos;main&apos; thread becomes suspended, which in essence implies that the application has entered an &apos;idle&apos; mode. An &apos;idle callback&apos; function is called when this &apos;idle&apos; mode has been entered. This callback function can be configured per the application requirements through the NoRTOS module, although the default setting is likely what should be used.</para><para><heading level="1">Usage</heading>
</para><para>The NoRTOS module contains the following APIs:<itemizedlist>
<listitem><para><ref refid="_no_r_t_o_s_8h_1a5beb1c723f408204ffa9251f778b9da6" kindref="member">NoRTOS_getConfig()</ref>: Retrieve the current NoRTOS configuration values.</para></listitem><listitem><para><ref refid="_no_r_t_o_s_8h_1ada45395ac2516b5d94fe4260e79def62" kindref="member">NoRTOS_setConfig()</ref>: Set NoRTOS configuration values.</para></listitem><listitem><para><ref refid="_no_r_t_o_s_8h_1a71a949aa77a36c1fbb73b482545d0b1b" kindref="member">NoRTOS_start()</ref>: Enable NoRTOS system operation (required).</para></listitem></itemizedlist>
</para><para><heading level="3">NoRTOS Framework Configuration</heading>
</para><para>The NoRTOS framework utilizes a few settings that the application should be able to control so as to accommodate the unique needs of the application or the system upon which the application runs. It is expected that the default values of these settings will suffice for the majority of applications using the NoRTOS framework. These default values should be of no concern to most applications since the aspects they control are internal to the TI Drivers&apos; operation, but system requirements or other code that is being integrated with the application could require different values. The NoRTOS configuration functions offer this capability to the application. Please refer to the documentation for the NoRTOS_Config structure for details on each configuration element.</para><para><heading level="3">Starting the NoRTOS framework operation</heading>
</para><para>Realtime systems often require precise timing when enabling certain aspects of the system. If some part of the system is enabled too early then other parts of the system may not operate correctly. Certain system elements need to be setup and initialized before other elements will operate correctly.</para><para>The <ref refid="_no_r_t_o_s_8h_1a71a949aa77a36c1fbb73b482545d0b1b" kindref="member">NoRTOS_start()</ref> API allows the application to control when the system as a whole should be &quot;started&quot;. <ref refid="_no_r_t_o_s_8h_1a71a949aa77a36c1fbb73b482545d0b1b" kindref="member">NoRTOS_start()</ref> <emphasis>must</emphasis> be called for the system to start, and should be called after all TI Driver and peripheral initialization has been performed.</para><para><heading level="3">Example usage</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;NoRTOS.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main(int<sp/>argc,<sp/>char<sp/>*argv[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NoRTOS_Config<sp/>cfg;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>current<sp/>values<sp/>of<sp/>all<sp/>configuration<sp/>settings</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NoRTOS_getConfig(&amp;cfg);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>config<sp/>settings<sp/>we<sp/>want<sp/>to<sp/>change<sp/>while<sp/>leaving<sp/>other</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>settings<sp/>at<sp/>their<sp/>default<sp/>values<sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>system<sp/>&quot;tick&quot;<sp/>frequency<sp/>to<sp/>10,000<sp/>Hz</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.clockTickPeriod<sp/>=<sp/>100;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>interrupt<sp/>used<sp/>for<sp/>Swi<sp/>scheduling<sp/>to<sp/>11<sp/>(SVCall)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cfg.swiIntNum<sp/>=<sp/>11;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Affect<sp/>the<sp/>changes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NoRTOS_setConfig(&amp;cfg);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>`perform<sp/>board<sp/>and<sp/>driver<sp/>initialization`;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Start<sp/>NoRTOS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NoRTOS_start();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Call<sp/>mainThread<sp/>function</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mainThread(NULL);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/>NoRTOS.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/>NoRTOS<sp/>framework<sp/>module</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>NoRTOS<sp/>header<sp/>file<sp/>should<sp/>be<sp/>included<sp/>in<sp/>an<sp/>application<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;NoRTOS.h&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>NoRTOS<sp/>framework<sp/>module<sp/>controls<sp/>various<sp/>aspects<sp/>of<sp/>the<sp/>application&apos;s</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>behavior<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>TI<sp/>Driver<sp/>interfaces<sp/>that<sp/>are<sp/>used<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>application.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>TI<sp/>Drivers<sp/>make<sp/>use<sp/>of<sp/>an<sp/>internal<sp/>Clock<sp/>module<sp/>that<sp/>offers<sp/>timing</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>services<sp/>to<sp/>the<sp/>drivers,<sp/>based<sp/>on<sp/>a<sp/>Clock<sp/>&quot;tick&quot;<sp/>which<sp/>operates<sp/>at<sp/>a</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>frequency<sp/>based<sp/>on<sp/>a<sp/>configured<sp/>period.<sp/><sp/>This<sp/>period<sp/>can<sp/>be<sp/>configured</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>per<sp/>application<sp/>requirements<sp/>through<sp/>the<sp/>NoRTOS<sp/>module,<sp/>although<sp/>the</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>default<sp/>setting<sp/>might<sp/>be<sp/>required<sp/>by<sp/>certain<sp/>TI<sp/>Drivers<sp/>that<sp/>assume<sp/>a</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>certain<sp/>Clock<sp/>tick<sp/>frequency.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>TI<sp/>Drivers<sp/>make<sp/>use<sp/>of<sp/>an<sp/>internal<sp/>Swi<sp/>(Software<sp/>interrupt)<sp/>module</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>offers<sp/>a<sp/>scheduling<sp/>paradigm<sp/>that<sp/>lies<sp/>between<sp/>an<sp/>application&apos;s</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>&apos;main&apos;<sp/>thread<sp/>and<sp/>hardware<sp/>interrupts.<sp/><sp/>The<sp/>internal<sp/>Swi<sp/>implementation</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>utilizes<sp/>a<sp/>software-triggered-only<sp/>hardware<sp/>interrupt<sp/>for<sp/>achieving<sp/>this</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>mid-level<sp/>scheduling<sp/>paradigm.<sp/><sp/>This<sp/>hardware<sp/>interrupt<sp/>can<sp/>be<sp/>configured</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>per<sp/>application<sp/>requirements<sp/>through<sp/>the<sp/>NoRTOS<sp/>module,<sp/>although<sp/>the</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>default<sp/>setting<sp/>is<sp/>likely<sp/>what<sp/>should<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>Some<sp/>TI<sp/>Drivers<sp/>will<sp/>&quot;suspend&quot;<sp/>the<sp/>application&apos;s<sp/>operation<sp/>until<sp/>a<sp/>certain</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>event<sp/>occurs.<sp/><sp/>When<sp/>an<sp/>application<sp/>is<sp/>running<sp/>in<sp/>the<sp/>NoRTOS<sp/>framework</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>there<sp/>are<sp/>no<sp/>other<sp/>&quot;threads&quot;<sp/>to<sp/>run<sp/>when<sp/>the<sp/>&apos;main&apos;<sp/>thread<sp/>becomes</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>suspended,<sp/>which<sp/>in<sp/>essence<sp/>implies<sp/>that<sp/>the<sp/>application<sp/>has<sp/>entered<sp/>an</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>&apos;idle&apos;<sp/>mode.<sp/><sp/>An<sp/>&apos;idle<sp/>callback&apos;<sp/>function<sp/>is<sp/>called<sp/>when<sp/>this<sp/>&apos;idle&apos;<sp/>mode</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>has<sp/>been<sp/>entered.<sp/><sp/>This<sp/>callback<sp/>function<sp/>can<sp/>be<sp/>configured<sp/>per<sp/>the</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>application<sp/>requirements<sp/>through<sp/>the<sp/>NoRTOS<sp/>module,<sp/>although<sp/>the<sp/>default</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>setting<sp/>is<sp/>likely<sp/>what<sp/>should<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Usage<sp/>#</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>NoRTOS<sp/>module<sp/>contains<sp/>the<sp/>following<sp/>APIs:</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>NoRTOS_getConfig():<sp/>Retrieve<sp/>the<sp/>current<sp/>NoRTOS<sp/>configuration<sp/>values.</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>NoRTOS_setConfig():<sp/>Set<sp/>NoRTOS<sp/>configuration<sp/>values.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>NoRTOS_start():<sp/>Enable<sp/>NoRTOS<sp/>system<sp/>operation<sp/>(required).</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>NoRTOS<sp/>Framework<sp/>Configuration<sp/>#</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>NoRTOS<sp/>framework<sp/>utilizes<sp/>a<sp/>few<sp/>settings<sp/>that<sp/>the<sp/>application<sp/>should</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>able<sp/>to<sp/>control<sp/>so<sp/>as<sp/>to<sp/>accommodate<sp/>the<sp/>unique<sp/>needs<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/>application<sp/>or<sp/>the<sp/>system<sp/>upon<sp/>which<sp/>the<sp/>application<sp/>runs.<sp/><sp/>It<sp/>is<sp/>expected</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>the<sp/>default<sp/>values<sp/>of<sp/>these<sp/>settings<sp/>will<sp/>suffice<sp/>for<sp/>the<sp/>majority<sp/>of</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/>applications<sp/>using<sp/>the<sp/>NoRTOS<sp/>framework.<sp/><sp/>These<sp/>default<sp/>values<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>no<sp/>concern<sp/>to<sp/>most<sp/>applications<sp/>since<sp/>the<sp/>aspects<sp/>they<sp/>control<sp/>are</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>internal<sp/>to<sp/>the<sp/>TI<sp/>Drivers&apos;<sp/>operation,<sp/>but<sp/>system<sp/>requirements<sp/>or<sp/>other</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>code<sp/>that<sp/>is<sp/>being<sp/>integrated<sp/>with<sp/>the<sp/>application<sp/>could<sp/>require<sp/>different</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>values.<sp/><sp/>The<sp/>NoRTOS<sp/>configuration<sp/>functions<sp/>offer<sp/>this<sp/>capability<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>application.<sp/><sp/>Please<sp/>refer<sp/>to<sp/>the<sp/>documentation<sp/>for<sp/>the<sp/>NoRTOS_Config</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>structure<sp/>for<sp/>details<sp/>on<sp/>each<sp/>configuration<sp/>element.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Starting<sp/>the<sp/>NoRTOS<sp/>framework<sp/>operation<sp/>#</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/>Realtime<sp/>systems<sp/>often<sp/>require<sp/>precise<sp/>timing<sp/>when<sp/>enabling<sp/>certain</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>aspects<sp/>of<sp/>the<sp/>system.<sp/><sp/>If<sp/>some<sp/>part<sp/>of<sp/>the<sp/>system<sp/>is<sp/>enabled<sp/>too<sp/>early</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>then<sp/>other<sp/>parts<sp/>of<sp/>the<sp/>system<sp/>may<sp/>not<sp/>operate<sp/>correctly.<sp/><sp/>Certain<sp/>system</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>elements<sp/>need<sp/>to<sp/>be<sp/>setup<sp/>and<sp/>initialized<sp/>before<sp/>other<sp/>elements<sp/>will</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>operate<sp/>correctly.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>NoRTOS_start()<sp/>API<sp/>allows<sp/>the<sp/>application<sp/>to<sp/>control<sp/>when<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>a<sp/>whole<sp/>should<sp/>be<sp/>&quot;started&quot;.<sp/><sp/>NoRTOS_start()<sp/>*must*<sp/>be<sp/>called<sp/>for</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>system<sp/>to<sp/>start,<sp/>and<sp/>should<sp/>be<sp/>called<sp/>after<sp/>all<sp/>TI<sp/>Driver<sp/>and</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>peripheral<sp/>initialization<sp/>has<sp/>been<sp/>performed.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Example<sp/>usage<sp/>#</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;NoRTOS.h&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>int<sp/>main(int<sp/>argc,<sp/>char<sp/>*argv[])</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NoRTOS_Config<sp/>cfg;</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>current<sp/>values<sp/>of<sp/>all<sp/>configuration<sp/>settings</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NoRTOS_getConfig(&amp;cfg);</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>config<sp/>settings<sp/>we<sp/>want<sp/>to<sp/>change<sp/>while<sp/>leaving<sp/>other</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>settings<sp/>at<sp/>their<sp/>default<sp/>values<sp/>...</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>system<sp/>&quot;tick&quot;<sp/>frequency<sp/>to<sp/>10,000<sp/>Hz</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>cfg.clockTickPeriod<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Change<sp/>interrupt<sp/>used<sp/>for<sp/>Swi<sp/>scheduling<sp/>to<sp/>11<sp/>(SVCall)</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>cfg.swiIntNum<sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Affect<sp/>the<sp/>changes</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NoRTOS_setConfig(&amp;cfg);</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>`perform<sp/>board<sp/>and<sp/>driver<sp/>initialization`;</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Start<sp/>NoRTOS</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>NoRTOS_start();</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Call<sp/>mainThread<sp/>function</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>mainThread(NULL);</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="struct___no_r_t_o_s___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct___no_r_t_o_s___config" kindref="compound">_NoRTOS_Config</ref><sp/>{</highlight></codeline>
<codeline lineno="158" refid="struct___no_r_t_o_s___config_1a74d5d90dda12ce20bf02b161d3b034a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct___no_r_t_o_s___config_1a74d5d90dda12ce20bf02b161d3b034a0" kindref="member">idleCallback</ref>)(void);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="struct___no_r_t_o_s___config_1ab40aceb951cb2960ff7287a4c16f4f8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct___no_r_t_o_s___config_1ab40aceb951cb2960ff7287a4c16f4f8c" kindref="member">clockTickPeriod</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="struct___no_r_t_o_s___config_1a84176428197106e7fb51c3bf010b6b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct___no_r_t_o_s___config_1a84176428197106e7fb51c3bf010b6b83" kindref="member">swiIntNum</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}<sp/><ref refid="_no_r_t_o_s_8h_1a28dea0ee567d35cc2ee31fa62b8a2a8a" kindref="member">NoRTOS_Config</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_no_r_t_o_s_8h_1a5beb1c723f408204ffa9251f778b9da6" kindref="member">NoRTOS_getConfig</ref>(<ref refid="struct___no_r_t_o_s___config" kindref="compound">NoRTOS_Config</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_no_r_t_o_s_8h_1ada45395ac2516b5d94fe4260e79def62" kindref="member">NoRTOS_setConfig</ref>(<ref refid="struct___no_r_t_o_s___config" kindref="compound">NoRTOS_Config</ref><sp/>*cfg);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/>Function<sp/>to<sp/>call<sp/>for<sp/>enabling<sp/>NoRTOS<sp/>system<sp/>operation</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_no_r_t_o_s_8h_1a71a949aa77a36c1fbb73b482545d0b1b" kindref="member">NoRTOS_start</ref>();</highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/kernel/nortos/NoRTOS.h"/>
  </compounddef>
</doxygen>
