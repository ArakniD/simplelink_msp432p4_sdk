<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_display_host_8h" kind="file" language="C++">
    <compoundname>DisplayHost.h</compoundname>
    <includes refid="_display_8h" local="no">ti/display/Display.h</includes>
    <incdepgraph>
      <node id="80">
        <label>stdarg.h</label>
      </node>
      <node id="79">
        <label>stdint.h</label>
      </node>
      <node id="78">
        <label>ti/display/Display.h</label>
        <link refid="_display_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>DisplayHost.h</label>
        <link refid="_display_host_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_display_host___h_w_attrs" prot="public">DisplayHost_HWAttrs</innerclass>
    <innerclass refid="struct_display_host___object" prot="public">DisplayHost_Object</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_display_host_8h_1a48e0ec430ab0c52fdab7c6c7caf541e8" prot="public" static="no">
        <type>struct <ref refid="struct_display_host___h_w_attrs" kindref="compound">DisplayHost_HWAttrs</ref></type>
        <definition>typedef struct DisplayHost_HWAttrs  DisplayHost_HWAttrs</definition>
        <argsstring></argsstring>
        <name>DisplayHost_HWAttrs</name>
        <briefdescription>
<para>DisplayHost Attributes. </para>        </briefdescription>
        <detaileddescription>
<para>The DisplayHost driver uses a buffer for formatting messages, which is then passed to an fwrite() function. The location and size of the buffer are specified in a <ref refid="struct_display_host___h_w_attrs" kindref="compound">DisplayHost_HWAttrs</ref> structure. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_display_host_8h_1a253a190cc3419385027ab13f49993fc2" prot="public" static="no">
        <type>struct <ref refid="struct_display_host___object" kindref="compound">DisplayHost_Object</ref></type>
        <definition>typedef struct DisplayHost_Object  DisplayHost_Object</definition>
        <argsstring></argsstring>
        <name>DisplayHost_Object</name>
        <briefdescription>
<para>DisplayHost Object. </para>        </briefdescription>
        <detaileddescription>
<para>The application must not access any member variables of this structure! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="_display_host_8h_1a593313134b4113afcfc7bf6ac036134c" prot="public" static="no">
        <type>struct <ref refid="struct_display_host___object" kindref="compound">DisplayHost_Object</ref> *</type>
        <definition>typedef struct DisplayHost_Object * DisplayHost_Handle</definition>
        <argsstring></argsstring>
        <name>DisplayHost_Handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_display_host_8h_1ad22670f7762565fe9060de8d9b335d9b" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_display___fxn_table" kindref="compound">Display_FxnTable</ref></type>
        <definition>const Display_FxnTable DisplayHost_fxnTable</definition>
        <argsstring></argsstring>
        <name>DisplayHost_fxnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_display_host_8h_1a153702ab6f849ceb8c0c9a77aeb8a95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayHost_init</definition>
        <argsstring>(Display_Handle handle)</argsstring>
        <name>DisplayHost_init</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1ab01c955367cf2e4713bba470e1c0804f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
        <definition>Display_Handle DisplayHost_open</definition>
        <argsstring>(Display_Handle, Display_Params *params)</argsstring>
        <name>DisplayHost_open</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
        </param>
        <param>
          <type><ref refid="struct_display___params" kindref="compound">Display_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1a83e16fad5a0a4f11f211f5a6352249d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayHost_clear</definition>
        <argsstring>(Display_Handle handle)</argsstring>
        <name>DisplayHost_clear</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1af8197e0a9f28d818e400fac50d8da98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayHost_clearLines</definition>
        <argsstring>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</argsstring>
        <name>DisplayHost_clearLines</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>fromLine</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>toLine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1ab5f31bcb87ec423108d730a193dd141f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayHost_vprintf</definition>
        <argsstring>(Display_Handle handle, uint8_t line, uint8_t column, char *fmt, va_list va)</argsstring>
        <name>DisplayHost_vprintf</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1a18d7e0d4baec8b86da93ede7ed9709dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayHost_close</definition>
        <argsstring>(Display_Handle)</argsstring>
        <name>DisplayHost_close</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1a404df745dd4de12e069ba923ef5e160e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DisplayHost_control</definition>
        <argsstring>(Display_Handle handle, unsigned int cmd, void *arg)</argsstring>
        <name>DisplayHost_control</name>
        <param>
          <type><ref refid="_display_8h_1a045a26811755aabf1886d982c49e54ab" kindref="member">Display_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_display_host_8h_1ae9245a2419d54546a85201237d4f2550" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int DisplayHost_getType</definition>
        <argsstring>(void)</argsstring>
        <name>DisplayHost_getType</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Display driver for printf-like output. </para>    </briefdescription>
    <detaileddescription>
<para>============================================================================</para><para><heading level="1">Driver include</heading>
</para><para>The header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/display/Display.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/display/DisplayHost.h&gt;</highlight></codeline>
</programlisting></para><para>Below is an example configuration to use the HOST display.</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/display/Display.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/display/DisplayHost.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#define<sp/>MAXPRINTLEN<sp/>1024</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">DisplayHost_Object<sp/>displayHostObject;</highlight></codeline>
<codeline><highlight class="normal">static<sp/>char<sp/>displayBuf[MAXPRINTLEN];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>DisplayHost_HWAttrs<sp/>displayHostHWAttrs<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.strBuf<sp/>=<sp/>displayBuf,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>.strBufLen<sp/>=<sp/>MAXPRINTLEN</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>Display_Config<sp/>Display_config[]<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.fxnTablePtr<sp/>=<sp/>&amp;DisplayHost_fxnTable,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.object<sp/>=<sp/>&amp;displayHostObject,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.hwAttrs<sp/>=<sp/>&amp;displayHostHWAttrs</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">const<sp/>uint8_t<sp/>Display_count<sp/>=<sp/>sizeof(Display_config)<sp/>/<sp/>sizeof(Display_Config);</highlight></codeline>
</programlisting></para><para><heading level="1">Calling Context</heading>
</para><para>For TIRTOS based applications, the Display_HOST interface is only callable from Task context. The Display_HOST interface is callable from any context for FreeRTOS based applications. <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2016-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor">#ifndef<sp/>ti_display_DisplayHost__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_display_DisplayHost__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_display_8h" kindref="compound">ti/display/Display.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="struct_display_host___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_display_host___h_w_attrs" kindref="compound">DisplayHost_HWAttrs</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101" refid="struct_display_host___h_w_attrs_1ac3696cae4d018951b95be22f560d8f6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_display_host___h_w_attrs_1ac3696cae4d018951b95be22f560d8f6f" kindref="member">strBuf</ref>;</highlight></codeline>
<codeline lineno="103" refid="struct_display_host___h_w_attrs_1a410831f94366a36020e1018ec71e7501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><ref refid="struct_display_host___h_w_attrs_1a410831f94366a36020e1018ec71e7501" kindref="member">strBufLen</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}<sp/><ref refid="_display_host_8h_1a48e0ec430ab0c52fdab7c6c7caf541e8" kindref="member">DisplayHost_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="struct_display_host___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_display_host___object" kindref="compound">DisplayHost_Object</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113" refid="struct_display_host___object_1a636a6b965c094235003c75f758fecefb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_display_host___object_1a636a6b965c094235003c75f758fecefb" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><ref refid="_display_host_8h_1a253a190cc3419385027ab13f49993fc2" kindref="member">DisplayHost_Object</ref>,<sp/>*<ref refid="_display_host_8h_1a593313134b4113afcfc7bf6ac036134c" kindref="member">DisplayHost_Handle</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DisplayHost<sp/>function<sp/>table<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_display___fxn_table" kindref="compound">Display_FxnTable</ref><sp/><ref refid="_display_host_8h_1ad22670f7762565fe9060de8d9b335d9b" kindref="member">DisplayHost_fxnTable</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DisplayHost<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_host_8h_1a153702ab6f849ceb8c0c9a77aeb8a95d" kindref="member">DisplayHost_init</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/><ref refid="_display_host_8h_1ab01c955367cf2e4713bba470e1c0804f" kindref="member">DisplayHost_open</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_display___params" kindref="compound">Display_Params</ref><sp/>*<sp/>params);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_host_8h_1a83e16fad5a0a4f11f211f5a6352249d5" kindref="member">DisplayHost_clear</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_host_8h_1af8197e0a9f28d818e400fac50d8da98a" kindref="member">DisplayHost_clearLines</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/>handle,<sp/>uint8_t<sp/>fromLine,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>toLine);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_display_host_8h_1ab5f31bcb87ec423108d730a193dd141f" kindref="member">DisplayHost_vprintf</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/>handle,<sp/>uint8_t<sp/>line,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>column,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>va);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_display_host_8h_1a18d7e0d4baec8b86da93ede7ed9709dd" kindref="member">DisplayHost_close</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_display_host_8h_1a404df745dd4de12e069ba923ef5e160e" kindref="member">DisplayHost_control</ref>(<ref refid="struct_display___config" kindref="compound">Display_Handle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="_display_host_8h_1ae9245a2419d54546a85201237d4f2550" kindref="member">DisplayHost_getType</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_display_DisplayHost__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/source/ti/display/DisplayHost.h"/>
  </compounddef>
</doxygen>
