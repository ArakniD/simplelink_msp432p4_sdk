<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_random_8h" kind="file" language="C++">
    <compoundname>Random.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="229">
        <label>stdbool.h</label>
      </node>
      <node id="227">
        <label>Random.h</label>
        <link refid="_random_8h"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>stdint.h</label>
      </node>
      <node id="230">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_random_8h_1a569eb30584df2e26b473d5507119527c" prot="public" static="no">
        <name>Random_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="86" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8h_1ae958209336d4db0995ff4397a2280151" prot="public" static="no">
        <name>Random_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="87" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_random_8h_1a5abc4bdb7377950c94b9a748ee73e81c" prot="public" static="no">
        <name>Random_SEED_LENGTH</name>
        <initializer>(20)</initializer>
        <briefdescription>
<para>Length of the seed in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="90" column="9" bodyfile="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_random_8h_1a268d2849532fa3d19a21477fad2465a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Random_seedAutomatic</definition>
        <argsstring>(void)</argsstring>
        <name>Random_seedAutomatic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Seed internal state automatically. </para>        </briefdescription>
        <detaileddescription>
<para>This function seeds or reseeds the internal state. The method for generating the seed is device dependent.</para><para>If a TRNG is available, it will be used to generate the seed.</para><para>If a TRNG is not available, information unique to the device running the code will be used. This may be a unique device identifier or other information such as a MAC address. Since the seed is constant per device for devices without a TRNG, the number sequence will restart after each call to <ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic()</ref>. This will usually occur after rebooting the device.</para><para>If neither a TRNG nor a unique device identifier is available, a constant will be used.</para><para><simplesect kind="return"><para>Returns a status code</para></simplesect>
<simplesect kind="see"><para><ref refid="_random_8h_1a2daafc64202e2356609c0443847b4464" kindref="member">Random_seedManual()</ref></para></simplesect>
<simplesect kind="post"><para><ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber()</ref></para></simplesect>
<simplesect kind="post"><para><ref refid="_random_8h_1a761e6552681ea33b81aab8a807b4bc2d" kindref="member">Random_getBytes()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_random_8h_1a2daafc64202e2356609c0443847b4464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Random_seedManual</definition>
        <argsstring>(uint8_t seed[(20)])</argsstring>
        <name>Random_seedManual</name>
        <param>
          <type>uint8_t</type>
          <declname>seed</declname>
          <array>[(20)]</array>
        </param>
        <briefdescription>
<para>Set the internal state to a specified seed. </para>        </briefdescription>
        <detaileddescription>
<para>This function sets the internal state to the seed specified by the application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Seed to set the internal state to</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic()</ref></para></simplesect>
<simplesect kind="post"><para><ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber()</ref></para></simplesect>
<simplesect kind="post"><para><ref refid="_random_8h_1a761e6552681ea33b81aab8a807b4bc2d" kindref="member">Random_getBytes()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Random_getNumber</definition>
        <argsstring>(void)</argsstring>
        <name>Random_getNumber</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a random number. </para>        </briefdescription>
        <detaileddescription>
<para>This function returns a random number and updates the internal state.</para><para><simplesect kind="return"><para>Returns random number</para></simplesect>
<simplesect kind="pre"><para><ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic()</ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="_random_8h_1a2daafc64202e2356609c0443847b4464" kindref="member">Random_seedManual()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_random_8h_1a761e6552681ea33b81aab8a807b4bc2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Random_getBytes</definition>
        <argsstring>(void *buffer, size_t bufferSize)</argsstring>
        <name>Random_getBytes</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a number of random bytes</para><para>This is a convenience function that fills the specified array with random bytes by repeatedly calling <ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to fill with random bytes</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufferSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer. Any value is permitted, including those that are not multiples of sizeof(uint32_t).</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="pre"><para><ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic()</ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="_random_8h_1a2daafc64202e2356609c0443847b4464" kindref="member">Random_seedManual()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to generate pseudo-random numbers. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>The numbers generated by this module are not crpytographically-secure! Do not use this module to generate keying material or for other security-related purposes!</para></simplesect>
This module generates non-cryptographically-secure random numbers in an easy to use and fast way.</para><para>There is a single global state that must be initialised by calling <ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic()</ref> or <ref refid="_random_8h_1a2daafc64202e2356609c0443847b4464" kindref="member">Random_seedManual()</ref>. Afterwards, you can call <ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber()</ref> or <ref refid="_random_8h_1a761e6552681ea33b81aab8a807b4bc2d" kindref="member">Random_getBytes()</ref> as desired. Both are thread-safe and protect the internal state.</para><para>The pseudo-random number generator used is the &quot;xorwow&quot; algorithm specified in Marsaglia&apos;s &quot;Xorshift RNGs&quot; paper. It keeps 20 bytes of state that must be seeded and has a period of 2^160 - 2^32 before a sequence wraps.</para><para>Generating a random number with this algorithm is quite fast. <ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber()</ref> only requires 82 instructions which is 1.7us on a 48MHz Cortex M4. That includes disabling interrupts.</para><para><programlisting><codeline><highlight class="normal">int_fast16_t<sp/>status;</highlight></codeline>
<codeline><highlight class="normal">uint32_t<sp/>randomNumber;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">status<sp/>=<sp/>Random_seedAutomatic();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(status<sp/>!=<sp/>Random_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">randomNumber<sp/>=<sp/>Random_getNumber();</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor">#ifndef<sp/>ti_drivers_utils_Random__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_utils_Random__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="_random_8h_1a569eb30584df2e26b473d5507119527c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Random_STATUS_SUCCESS<sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="_random_8h_1ae958209336d4db0995ff4397a2280151" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Random_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="_random_8h_1a5abc4bdb7377950c94b9a748ee73e81c" refkind="member"><highlight class="preprocessor">#define<sp/>Random_SEED_LENGTH<sp/>(20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_random_8h_1a268d2849532fa3d19a21477fad2465a9" kindref="member">Random_seedAutomatic</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_random_8h_1a2daafc64202e2356609c0443847b4464" kindref="member">Random_seedManual</ref>(uint8_t<sp/>seed[<ref refid="_random_8h_1a5abc4bdb7377950c94b9a748ee73e81c" kindref="member">Random_SEED_LENGTH</ref>]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="_random_8h_1ae7ec74feb59a3a7b8990aec4694941c0" kindref="member">Random_getNumber</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_random_8h_1a761e6552681ea33b81aab8a807b4bc2d" kindref="member">Random_getBytes</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufferSize);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_utils_Random__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432/source/ti/drivers/utils/Random.h"/>
  </compounddef>
</doxygen>
